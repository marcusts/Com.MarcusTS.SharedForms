<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Com.MarcusTS.SharedForms</name>
    </assembly>
    <members>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AssertionConditionType">
            <summary>
               Specifies assertion type. If the assertion method argument satisfies the condition,
               then the execution continues. Otherwise, execution is assumed to be halted.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.AssertionConditionType.IS_TRUE">
            <summary>
               Marked parameter should be evaluated to true.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.AssertionConditionType.IS_FALSE">
            <summary>
               Marked parameter should be evaluated to false.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.AssertionConditionType.IS_NULL">
            <summary>
               Marked parameter should be evaluated to null value.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>
               Marked parameter should be evaluated to not null value.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.CollectionAccessType">
            <summary>
               Enum CollectionAccessType
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.CollectionAccessType.None">
            <summary>
               Method does not use or modify content of the collection.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.CollectionAccessType.Read">
            <summary>
               Method only reads content of the collection but does not modify it.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.CollectionAccessType.ModifyExistingContent">
            <summary>
               Method can change content of the collection but does not add new elements.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.CollectionAccessType.UpdatedContent">
            <summary>
               Method can add new elements to the collection.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags">
            <summary>
               Enum ImplicitUseKindFlags
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags.Default">
            <summary>
               The default
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags.Access">
            <summary>
               Only entity marked with attribute considered used.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags.Assign">
            <summary>
               Indicates implicit assignment to a member.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
               Indicates implicit instantiation of a type with fixed constructor signature.
               That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>
               Indicates implicit instantiation of a type.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags">
            <summary>
               Specify what is considered used implicitly when marked
               with <see cref="T:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute" /> or <see cref="T:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute" />.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags.Default">
            <summary>
               The default
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags.Itself">
            <summary>
               The itself
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags.Members">
            <summary>
               Members of entity marked with attribute are considered used.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>
               Entity marked with attribute and all its members considered used.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspChildControlTypeAttribute">
            <summary>
               Class AspChildControlTypeAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspChildControlTypeAttribute.#ctor(System.String,System.Type)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspChildControlTypeAttribute" /> class.
            </summary>
            <param name="tagName">Name of the tag.</param>
            <param name="controlType">Type of the control.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspChildControlTypeAttribute.ControlType">
            <summary>
               Gets the type of the control.
            </summary>
            <value>The type of the control.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspChildControlTypeAttribute.TagName">
            <summary>
               Gets the name of the tag.
            </summary>
            <value>The name of the tag.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspDataFieldAttribute">
            <summary>
               Class AspDataFieldAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspDataFieldsAttribute">
            <summary>
               Class AspDataFieldsAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMethodPropertyAttribute">
            <summary>
               Class AspMethodPropertyAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcActionAttribute">
            <summary>
               ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
               is an MVC action. If applied to a method, the MVC action name is calculated
               implicitly from the context. Use this attribute for custom wrappers similar to
               <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcActionAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcActionAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcActionAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcActionAttribute" /> class.
            </summary>
            <param name="anonymousProperty">The anonymous property.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcActionAttribute.AnonymousProperty">
            <summary>
               Gets the anonymous property.
            </summary>
            <value>The anonymous property.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcActionSelectorAttribute">
            <summary>
               ASP.NET MVC attribute. When applied to a parameter of an attribute,
               indicates that this parameter is an MVC action name.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
               <code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
            ViewBag.ReturnUrl = Url.Action("Foo"); // OK
            return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code>
            </example>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaAttribute">
            <summary>
               ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
               Use this attribute for custom wrappers similar to
               <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaAttribute" /> class.
            </summary>
            <param name="anonymousProperty">The anonymous property.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaAttribute.AnonymousProperty">
            <summary>
               Gets the anonymous property.
            </summary>
            <value>The anonymous property.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaMasterLocationFormatAttribute">
            <summary>
               Class AspMvcAreaMasterLocationFormatAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaMasterLocationFormatAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaMasterLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaMasterLocationFormatAttribute.Format">
            <summary>
               Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaPartialViewLocationFormatAttribute">
            <summary>
               Class AspMvcAreaPartialViewLocationFormatAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaPartialViewLocationFormatAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaPartialViewLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaPartialViewLocationFormatAttribute.Format">
            <summary>
               Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaViewLocationFormatAttribute">
            <summary>
               Class AspMvcAreaViewLocationFormatAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaViewLocationFormatAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaViewLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcAreaViewLocationFormatAttribute.Format">
            <summary>
               Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcControllerAttribute">
            <summary>
               ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is
               an MVC controller. If applied to a method, the MVC controller name is calculated
               implicitly from the context. Use this attribute for custom wrappers similar to
               <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcControllerAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcControllerAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcControllerAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcControllerAttribute" /> class.
            </summary>
            <param name="anonymousProperty">The anonymous property.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcControllerAttribute.AnonymousProperty">
            <summary>
               Gets the anonymous property.
            </summary>
            <value>The anonymous property.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
               ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
               Use this attribute for custom wrappers similar to
               <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
               ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
               Use this attribute for custom wrappers similar to
               <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcMasterAttribute">
            <summary>
               ASP.NET MVC attribute. Indicates that a parameter is an MVC Master. Use this attribute
               for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcMasterLocationFormatAttribute">
            <summary>
               Class AspMvcMasterLocationFormatAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcMasterLocationFormatAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcMasterLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcMasterLocationFormatAttribute.Format">
            <summary>
               Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcModelTypeAttribute">
            <summary>
               ASP.NET MVC attribute. Indicates that a parameter is an MVC model type. Use this attribute
               for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, Object)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcPartialViewAttribute">
            <summary>
               ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC
               partial view. If applied to a method, the MVC partial view name is calculated implicitly
               from the context. Use this attribute for custom wrappers similar to
               <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcPartialViewLocationFormatAttribute">
            <summary>
               Class AspMvcPartialViewLocationFormatAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcPartialViewLocationFormatAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcPartialViewLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcPartialViewLocationFormatAttribute.Format">
            <summary>
               Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcSuppressViewErrorAttribute">
            <summary>
               ASP.NET MVC attribute. Allows disabling inspections for MVC views within a class or a method.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcTemplateAttribute">
            <summary>
               ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
               Use this attribute for custom wrappers similar to
               <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcViewAttribute">
            <summary>
               ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
               is an MVC view component. If applied to a method, the MVC view name is calculated implicitly
               from the context. Use this attribute for custom wrappers similar to
               <c>System.Web.Mvc.Controller.View(Object)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcViewComponentAttribute">
            <summary>
               ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
               is an MVC view component name.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcViewComponentViewAttribute">
            <summary>
               ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
               is an MVC view component view. If applied to a method, the MVC view component view name is default.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspMvcViewLocationFormatAttribute">
            <summary>
               Class AspMvcViewLocationFormatAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspMvcViewLocationFormatAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspMvcViewLocationFormatAttribute" /> class.
            </summary>
            <param name="format">The format.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspMvcViewLocationFormatAttribute.Format">
            <summary>
               Gets the format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspRequiredAttributeAttribute">
            <summary>
               Class AspRequiredAttributeAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspRequiredAttributeAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspRequiredAttributeAttribute" /> class.
            </summary>
            <param name="attribute">The attribute.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspRequiredAttributeAttribute.Attribute">
            <summary>
               Gets the attribute.
            </summary>
            <value>The attribute.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AspTypePropertyAttribute">
            <summary>
               Class AspTypePropertyAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AspTypePropertyAttribute.#ctor(System.Boolean)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AspTypePropertyAttribute" /> class.
            </summary>
            <param name="createConstructorReferences">if set to <c>true</c> [create constructor references].</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AspTypePropertyAttribute.CreateConstructorReferences">
            <summary>
               Gets a value indicating whether [create constructor references].
            </summary>
            <value><c>true</c> if [create constructor references]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AssertionConditionAttribute">
            <summary>
               Indicates the condition parameter of the assertion method. The method itself should be
               marked by <see cref="T:Com.MarcusTS.SharedForms.Annotations.AssertionMethodAttribute" /> attribute. The mandatory argument of
               the attribute is the assertion type.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.AssertionConditionAttribute.#ctor(Com.MarcusTS.SharedForms.Annotations.AssertionConditionType)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.AssertionConditionAttribute" /> class.
            </summary>
            <param name="conditionType">Type of the condition.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.AssertionConditionAttribute.ConditionType">
            <summary>
               Gets the type of the condition.
            </summary>
            <value>The type of the condition.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.AssertionMethodAttribute">
            <summary>
               Indicates that the marked method is assertion method, i.e. it halts control flow if
               one of the conditions is satisfied. To set the condition, mark one of the parameters with
               <see cref="T:Com.MarcusTS.SharedForms.Annotations.AssertionConditionAttribute" /> attribute.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.BaseTypeRequiredAttribute">
            <summary>
               When applied to a target attribute, specifies a requirement for any type marked
               with the target attribute to implement or inherit specific type or types.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
               <code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            class MyComponent : IComponent { }
            </code>
            </example>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.BaseTypeRequiredAttribute.#ctor(System.Type)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.BaseTypeRequiredAttribute" /> class.
            </summary>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.BaseTypeRequiredAttribute.BaseType">
            <summary>
               Gets the type of the base.
            </summary>
            <value>The type of the base.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.CanBeNullAttribute">
             <summary>
                Indicates that the value of the marked element could be <c>null</c> sometimes,
                so the check for <c>null</c> is necessary before its usage.
             </summary>
             <example>
                <code>
             [CanBeNull] object Test() => null;
            
             void UseTest() {
               var p = Test();
               var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
             }
             </code>
             </example>
             <summary>
                Class CanBeNullAttribute. This class cannot be inherited.
                Implements the <see cref="T:System.Attribute" />
             </summary>
             <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
               Indicates that the value of the marked type (or its derivatives)
               cannot be compared using '==' or '!=' operators and <c>Equals()</c>
               should be used instead. However, using '==' or '!=' for comparison
               with <c>null</c> is always permitted.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
               <code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
            void Test() {
            var ca1 = new NoEquality();
            var ca2 = new NoEquality();
            if (ca1 != null) { // OK
            bool condition = ca1 == ca2; // Warning
            }
            }
            }
            </code>
            </example>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.CollectionAccessAttribute">
            <summary>
               Indicates how method, constructor invocation or property access
               over collection type affects content of the collection.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.CollectionAccessAttribute.#ctor(Com.MarcusTS.SharedForms.Annotations.CollectionAccessType)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.CollectionAccessAttribute" /> class.
            </summary>
            <param name="collectionAccessType">Type of the collection access.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.CollectionAccessAttribute.CollectionAccessType">
            <summary>
               Gets the type of the collection access.
            </summary>
            <value>The type of the collection access.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.ContractAnnotationAttribute">
            <summary>
               Describes dependency between method input and output.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <syntax>
               <p>Function Definition Table syntax:</p>
               <list>
                  <item>FDT      ::= FDTRow [;FDTRow]*</item>
                  <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
                  <item>Input    ::= ParameterName: Value [, Input]*</item>
                  <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
                  <item>Value    ::= true | false | null | notnull | canbenull</item>
               </list>
               If method has single input parameter, it's name could be omitted.<br />
               Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same) for method output
               means that the methos doesn't return normally (throws or terminates the process).<br />
               Value <c>canbenull</c> is only applicable for output parameters.<br />
               You can use multiple <c>[ContractAnnotation]</c> for each FDT row, or use single attribute
               with rows separated by semicolon. There is no notion of order rows, all rows are checked
               for applicability and applied per each program state tracked by R# analysis.<br />
            </syntax>
            <examples>
               <list>
                  <item>
                     <code>
            [ContractAnnotation("=&gt; halt")]
            public void TerminationMethod()
            </code>
                  </item>
                  <item>
                     <code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code>
                  </item>
                  <item>
                     <code>
            [ContractAnnotation("s:null =&gt; true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code>
                  </item>
                  <item>
                     <code>
            // A method that returns null if the parameter is null,
            // and not null if the parameter is not null
            [ContractAnnotation("null =&gt; null; notnull =&gt; notnull")]
            public object Transform(object data)
            </code>
                  </item>
                  <item>
                     <code>
            [ContractAnnotation("=&gt; true, result: notnull; =&gt; false, result: null")]
            public bool TryParse(string s, out Person result)
            </code>
                  </item>
               </list>
            </examples>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.ContractAnnotationAttribute" /> class.
            </summary>
            <param name="contract">The contract.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.ContractAnnotationAttribute.#ctor(System.String,System.Boolean)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.ContractAnnotationAttribute" /> class.
            </summary>
            <param name="contract">The contract.</param>
            <param name="forceFullStates">if set to <c>true</c> [force full states].</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.ContractAnnotationAttribute.Contract">
            <summary>
               Gets the contract.
            </summary>
            <value>The contract.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.ContractAnnotationAttribute.ForceFullStates">
            <summary>
               Gets a value indicating whether [force full states].
            </summary>
            <value><c>true</c> if [force full states]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.HtmlAttributeValueAttribute">
            <summary>
               Class HtmlAttributeValueAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.HtmlAttributeValueAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.HtmlAttributeValueAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.HtmlAttributeValueAttribute.Name">
            <summary>
               Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.HtmlElementAttributesAttribute">
            <summary>
               Class HtmlElementAttributesAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.HtmlElementAttributesAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.HtmlElementAttributesAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.HtmlElementAttributesAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.HtmlElementAttributesAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.HtmlElementAttributesAttribute.Name">
            <summary>
               Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.InstantHandleAttribute">
            <summary>
               Tells code analysis engine if the parameter is completely handled when the invoked method is on stack.
               If the parameter is a delegate, indicates that delegate is executed while the method is executed.
               If the parameter is an enumerable, indicates that it is enumerated while the method is executed.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.InvokerParameterNameAttribute">
            <summary>
               Indicates that the function argument should be string literal and match one
               of the parameters of the caller function. For example, ReSharper annotates
               the parameter of <see cref="T:System.ArgumentNullException" />.
            </summary>
            <example>
               <code>
            void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code>
            </example>
            <summary>
               Class InvokerParameterNameAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.ItemCanBeNullAttribute">
            <summary>
               Can be appplied to symbols of types derived from IEnumerable as well as to symbols of Task
               and Lazy classes to indicate that the value of a collection item, of the Task.Result property
               or of the Lazy.Value property can be null.
            </summary>
            <summary>
               Class ItemCanBeNullAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.ItemNotNullAttribute">
            <summary>
               Can be appplied to symbols of types derived from IEnumerable as well as to symbols of Task
               and Lazy classes to indicate that the value of a collection item, of the Task.Result property
               or of the Lazy.Value property can never be null.
            </summary>
            <summary>
               Class ItemNotNullAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.LinqTunnelAttribute">
            <summary>
               Indicates that method is pure LINQ method, with postponed enumeration (like Enumerable.Select,
               .Where). This annotation allows inference of [InstantHandle] annotation for parameters
               of delegate type by analyzing LINQ method chains.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.LocalizationRequiredAttribute">
            <summary>
               Indicates that marked element should be localized or not.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
               <code>
            [LocalizationRequiredAttribute(true)]
            class Foo {
            string str = "my string"; // Warning: Localizable string
            }
            </code>
            </example>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.LocalizationRequiredAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.LocalizationRequiredAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.LocalizationRequiredAttribute.#ctor(System.Boolean)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.LocalizationRequiredAttribute" /> class.
            </summary>
            <param name="required">if set to <c>true</c> [required].</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.LocalizationRequiredAttribute.Required">
            <summary>
               Gets a value indicating whether this <see cref="T:Com.MarcusTS.SharedForms.Annotations.LocalizationRequiredAttribute" /> is required.
            </summary>
            <value><c>true</c> if required; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.MacroAttribute">
            <summary>
               Allows specifying a macro for a parameter of a <see cref="T:Com.MarcusTS.SharedForms.Annotations.SourceTemplateAttribute">source template</see>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
               Applying the attribute on a source template method:
               <code>
            [SourceTemplate, Macro(Target = "item", Expression = "suggestVariableName()")]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; collection) {
            foreach (var item in collection) {
            //$ $END$
            }
            }
            </code>
               Applying the attribute on a template method parameter:
               <code>
            [SourceTemplate]
            public static void something(this Entity x, [Macro(Expression = "guid()", Editable = -1)] string newguid) {
            /*$ var $x$Id = "$newguid$" + x.ToString();
            x.DoSomething($x$Id); */
            }
            </code>
            </example>
            <remarks>
               You can apply the attribute on the whole method or on any of its additional parameters. The macro expression
               is defined in the <see cref="P:Com.MarcusTS.SharedForms.Annotations.MacroAttribute.Expression" /> property. When applied on a method, the target
               template parameter is defined in the <see cref="P:Com.MarcusTS.SharedForms.Annotations.MacroAttribute.Target" /> property. To apply the macro silently
               for the parameter, set the <see cref="P:Com.MarcusTS.SharedForms.Annotations.MacroAttribute.Editable" /> property value = -1.
            </remarks>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.MacroAttribute.Editable">
            <summary>
               Allows specifying which occurrence of the target parameter becomes editable when the template is deployed.
            </summary>
            <value>The editable.</value>
            &gt;
            <remarks>
               If the target parameter is used several times in the template, only one occurrence becomes editable;
               other occurrences are changed synchronously. To specify the zero-based index of the editable occurrence,
               use values &gt;= 0. To make the parameter non-editable when the template is expanded, use -1.
            </remarks>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.MacroAttribute.Expression">
            <summary>
               Allows specifying a macro that will be executed for a <see cref="T:Com.MarcusTS.SharedForms.Annotations.SourceTemplateAttribute">source template</see>
               parameter when the template is expanded.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.MacroAttribute.Target">
            <summary>
               Identifies the target parameter of a <see cref="T:Com.MarcusTS.SharedForms.Annotations.SourceTemplateAttribute">source template</see> if the
               <see cref="T:Com.MarcusTS.SharedForms.Annotations.MacroAttribute" /> is applied on a template method.
            </summary>
            <value>The target.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute">
            <summary>
               Should be used on attributes and causes ReSharper to not mark symbols marked with such attributes
               as unused (as well as by other usage inspections)
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute.#ctor(Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute" /> class.
            </summary>
            <param name="useKindFlags">The use kind flags.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute.#ctor(Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute" /> class.
            </summary>
            <param name="targetFlags">The target flags.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute.#ctor(Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags,Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute" /> class.
            </summary>
            <param name="useKindFlags">The use kind flags.</param>
            <param name="targetFlags">The target flags.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute.TargetFlags">
            <summary>
               Gets the target flags.
            </summary>
            <value>The target flags.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.MeansImplicitUseAttribute.UseKindFlags">
            <summary>
               Gets the use kind flags.
            </summary>
            <value>The use kind flags.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.MustUseReturnValueAttribute">
            <summary>
               Indicates that the return value of method invocation must be used.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.MustUseReturnValueAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.MustUseReturnValueAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.MustUseReturnValueAttribute" /> class.
            </summary>
            <param name="justification">The justification.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.MustUseReturnValueAttribute.Justification">
            <summary>
               Gets the justification.
            </summary>
            <value>The justification.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.NoEnumerationAttribute">
            <summary>
               Indicates that IEnumerable, passed as parameter, is not enumerated.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.NoReorderAttribute">
            <summary>
               Prevents the Member Reordering feature from tossing members of the marked class.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <remarks>The attribute must be mentioned in your member reordering patterns</remarks>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
                Indicates that the method is contained in a type that implements
                <c>System.ComponentModel.INotifyPropertyChanged</c> interface and this method
                is used to notify that some property value changed.
             </summary>
             <remarks>
                The method should be non-static and conform to one of the supported signatures:
                <list>
                   <item>
                      <c>NotifyChanged(string)</c>
                   </item>
                   <item>
                      <c>NotifyChanged(params string[])</c>
                   </item>
                   <item>
                      <c>NotifyChanged{T}(Expression{Func{T}})</c>
                   </item>
                   <item>
                      <c>NotifyChanged{T,U}(Expression{Func{T,U}})</c>
                   </item>
                   <item>
                      <c>SetProperty{T}(ref T, T, string)</c>
                   </item>
                </list>
             </remarks>
             <example>
                <code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
            
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               string _name;
            
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
                Examples of generated notifications:
                <list>
                   <item>
                      <c>NotifyChanged("Property")</c>
                   </item>
                   <item>
                      <c>NotifyChanged(() =&gt; Property)</c>
                   </item>
                   <item>
                      <c>NotifyChanged((VM x) =&gt; x.Property)</c>
                   </item>
                   <item>
                      <c>SetProperty(ref myField, value, "Property")</c>
                   </item>
                </list>
             </example>
             <summary>
                Class NotifyPropertyChangedInvocatorAttribute. This class cannot be inherited.
                Implements the <see cref="T:System.Attribute" />
             </summary>
             <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.NotifyPropertyChangedInvocatorAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.NotifyPropertyChangedInvocatorAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.NotifyPropertyChangedInvocatorAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.NotifyPropertyChangedInvocatorAttribute" /> class.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.NotifyPropertyChangedInvocatorAttribute.ParameterName">
            <summary>
               Gets the name of the parameter.
            </summary>
            <value>The name of the parameter.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.NotNullAttribute">
            <summary>
               Indicates that the value of the marked element could never be <c>null</c>.
            </summary>
            <example>
               <code>
            [NotNull] object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code>
            </example>
            <summary>
               Class NotNullAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.PathReferenceAttribute">
            <summary>
               Indicates that a parameter is a path to a file or a folder within a web project.
               Path can be relative or absolute, starting from web root (~).
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.PathReferenceAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.PathReferenceAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.PathReferenceAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.PathReferenceAttribute" /> class.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.PathReferenceAttribute.BasePath">
            <summary>
               Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.ProvidesContextAttribute">
            <summary>
               Indicates the type member or parameter of some type, that should be used instead of all other ways
               to get the value that type. This annotation is useful when you have some "context" value evaluated
               and stored somewhere, meaning that all other ways to get this value must be consolidated with existing one.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
               <code>
            class Foo {
            [ProvidesContext] IBarService _barService = ...;
            void ProcessNode(INode node) {
            DoSomething(node, node.GetGlobalServices().Bar);
            //              ^ Warning: use value of '_barService' field
            }
            }
            </code>
            </example>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.PublicAPIAttribute">
            <summary>
               This attribute is intended to mark publicly available API
               which should not be removed and so is treated as used.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.PublicAPIAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.PublicAPIAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.PublicAPIAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.PublicAPIAttribute" /> class.
            </summary>
            <param name="comment">The comment.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.PublicAPIAttribute.Comment">
            <summary>
               Gets the comment.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.PureAttribute">
            <summary>
               Indicates that a method does not make any observable state changes.
               The same as <c>System.Diagnostics.Contracts.PureAttribute</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
               <code>
            [Pure] int Multiply(int x, int y) =&gt; x * y;
            void M() {
            Multiply(123, 42); // Waring: Return value of pure method is not used
            }
            </code>
            </example>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorDirectiveAttribute">
            <summary>
               Class RazorDirectiveAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.RazorDirectiveAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.RazorDirectiveAttribute" /> class.
            </summary>
            <param name="directive">The directive.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.RazorDirectiveAttribute.Directive">
            <summary>
               Gets the directive.
            </summary>
            <value>The directive.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorHelperCommonAttribute">
            <summary>
               Class RazorHelperCommonAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorImportNamespaceAttribute">
            <summary>
               Class RazorImportNamespaceAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.RazorImportNamespaceAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.RazorImportNamespaceAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.RazorImportNamespaceAttribute.Name">
            <summary>
               Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorInjectionAttribute">
            <summary>
               Class RazorInjectionAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.RazorInjectionAttribute.#ctor(System.String,System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.RazorInjectionAttribute" /> class.
            </summary>
            <param name="type">The type.</param>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.RazorInjectionAttribute.FieldName">
            <summary>
               Gets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.RazorInjectionAttribute.Type">
            <summary>
               Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorLayoutAttribute">
            <summary>
               Class RazorLayoutAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorPageBaseTypeAttribute">
            <summary>
               Class RazorPageBaseTypeAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.RazorPageBaseTypeAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.RazorPageBaseTypeAttribute" /> class.
            </summary>
            <param name="baseType">Type of the base.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.RazorPageBaseTypeAttribute.#ctor(System.String,System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.RazorPageBaseTypeAttribute" /> class.
            </summary>
            <param name="baseType">Type of the base.</param>
            <param name="pageName">Name of the page.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.RazorPageBaseTypeAttribute.BaseType">
            <summary>
               Gets the type of the base.
            </summary>
            <value>The type of the base.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.RazorPageBaseTypeAttribute.PageName">
            <summary>
               Gets the name of the page.
            </summary>
            <value>The name of the page.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorSectionAttribute">
            <summary>
               Razor attribute. Indicates that a parameter or a method is a Razor section.
               Use this attribute for custom wrappers similar to
               <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorWriteLiteralMethodAttribute">
            <summary>
               Class RazorWriteLiteralMethodAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorWriteMethodAttribute">
            <summary>
               Class RazorWriteMethodAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RazorWriteMethodParameterAttribute">
            <summary>
               Class RazorWriteMethodParameterAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.RegexPatternAttribute">
            <summary>
               Indicates that parameter is regular expression pattern.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.SourceTemplateAttribute">
            <summary>
               An extension method marked with this attribute is processed by ReSharper code completion
               as a 'Source Template'. When extension method is completed over some expression, it's source code
               is automatically expanded like a template at call site.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <example>
               In this example, the 'forEach' method is a source template available over all values
               of enumerable types, producing ordinary C# 'foreach' statement and placing caret inside block:
               <code>
            [SourceTemplate]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; xs) {
            foreach (var x in xs) {
            //$ $END$
            }
            }
            </code>
            </example>
            <remarks>
               Template method body can contain valid source code and/or special comments starting with '$'.
               Text inside these comments is added as source code when the template is applied. Template parameters
               can be used either as additional method parameters or as identifiers wrapped in two '$' signs.
               Use the <see cref="T:Com.MarcusTS.SharedForms.Annotations.MacroAttribute" /> attribute to specify macros for parameters.
            </remarks>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.StringFormatMethodAttribute">
             <summary>
                Indicates that the marked method builds string by format pattern and (optional) arguments.
                Parameter, which contains format string, should be given in constructor. The format string
                should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" />-like form.
             </summary>
             <example>
                <code>
             [StringFormatMethod("message")]
             void ShowError(string message, params object[] args) { /* do something */ }
            
             void Foo() {
               ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
             }
             </code>
             </example>
             <summary>
                Class StringFormatMethodAttribute. This class cannot be inherited.
                Implements the <see cref="T:System.Attribute" />
             </summary>
             <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
               Specifies which parameter of an annotated method should be treated as format-string
            </param>
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.StringFormatMethodAttribute" /> class.
            </summary>
            <param name="formatParameterName">Name of the format parameter.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.StringFormatMethodAttribute.FormatParameterName">
            <summary>
               Gets the name of the format parameter.
            </summary>
            <value>The name of the format parameter.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.TerminatesProgramAttribute">
            <summary>
               Indicates that the marked method unconditionally terminates control flow execution.
               For example, it could unconditionally throw exception.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute">
            <summary>
               Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
               so this symbol will not be marked as unused (as well as by other usage inspections).
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute.#ctor(Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute" /> class.
            </summary>
            <param name="useKindFlags">The use kind flags.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute.#ctor(Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute" /> class.
            </summary>
            <param name="targetFlags">The target flags.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute.#ctor(Com.MarcusTS.SharedForms.Annotations.ImplicitUseKindFlags,Com.MarcusTS.SharedForms.Annotations.ImplicitUseTargetFlags)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute" /> class.
            </summary>
            <param name="useKindFlags">The use kind flags.</param>
            <param name="targetFlags">The target flags.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute.TargetFlags">
            <summary>
               Gets the target flags.
            </summary>
            <value>The target flags.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.UsedImplicitlyAttribute.UseKindFlags">
            <summary>
               Gets the use kind flags.
            </summary>
            <value>The use kind flags.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.ValueProviderAttribute">
            <summary>
               For a parameter that is expected to be one of the limited set of values.
               Specify fields of which type should be used as values for this parameter.
            </summary>
            <summary>
               Class ValueProviderAttribute. This class cannot be inherited.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Annotations.ValueProviderAttribute.#ctor(System.String)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Annotations.ValueProviderAttribute" /> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Annotations.ValueProviderAttribute.Name">
            <summary>
               Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.XamlItemBindingOfItemsControlAttribute">
            <summary>
               XAML attribute. Indicates the property of some <c>BindingBase</c>-derived type, that
               is used to bind some item of <c>ItemsControl</c>-derived type. This annotation will
               enable the <c>DataContext</c> type resolve for XAML bindings for such properties.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
            <remarks>
               Property should have the tree ancestor of the <c>ItemsControl</c> type or
               marked with the <see cref="T:Com.MarcusTS.SharedForms.Annotations.XamlItemsControlAttribute" /> attribute.
            </remarks>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Annotations.XamlItemsControlAttribute">
            <summary>
               XAML attribute. Indicates the type that has <c>ItemsSource</c> property and should be treated
               as <c>ItemsControl</c>-derived type, to enable inner items <c>DataContext</c> type resolve.
               Implements the <see cref="T:System.Attribute" />
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.IAllValuesRequiredBehavior">
            <summary>
               Interface IAllValuesRequiredBehavior
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Behaviors.IAllValuesRequiredBehavior.MinLength">
            <summary>
               Gets or sets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.AllValuesRequiredBehavior">
            <summary>
               No restrictions on input, but the field *must* have a value.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.IAllValuesRequiredBehavior" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.IAllValuesRequiredBehavior" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.AllValuesRequiredBehavior.#ctor(System.Action)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.AllValuesRequiredBehavior" /> class.
            </summary>
            <param name="onIsValidChangedAction">The on is valid changed action.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Behaviors.AllValuesRequiredBehavior.MinLength">
            <summary>
               Gets or sets the minimum length.
            </summary>
            <value>The minimum length.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase">
            <summary>
               Interface IBehaviorBase
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.IIsValid" />
               Implements the <see cref="T:System.ComponentModel.INotifyPropertyChanged" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.IIsValid" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase.Revalidate">
            <summary>
               Revalidates this instance.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase">
            <summary>
               Base abstract class for managing complex validations, including validating
               as the user types, as well as validating after user input has completed.
               Implements the <see cref="!:Xamarin.Forms.Behavior&lt;Xamarin.Forms.Entry&gt;" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase" />
            </summary>
            <seealso cref="!:Xamarin.Forms.Behavior&lt;Xamarin.Forms.Entry&gt;" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase._illegalCharFilter">
            <summary>
               The illegal character filter
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase._onIsValidChangedAction">
            <summary>
               The on is valid changed action
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase._bindable">
            <summary>
               The bindable
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase._isValid">
            <summary>
               The is valid
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.#ctor(System.Action,System.Func{Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase,System.String,System.Boolean},System.Func{System.String,System.String})">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" /> class.
            </summary>
            <param name="onIsValidChangedAction">The on is valid changed action.</param>
            <param name="validator">The validator.</param>
            <param name="illegalCharFilter">The illegal character filter.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.IsFocused">
            <summary>
               Gets a value indicating whether this instance is focused.
            </summary>
            <value><c>true</c> if this instance is focused; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.IsValid">
            <summary>
               Returns true if ... is valid.
            </summary>
            <value><c>null</c> if [is valid] contains no value, <c>true</c> if [is valid]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.Validator">
            <summary>
               Gets or sets the validator.
            </summary>
            <value>The validator.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.Revalidate">
            <summary>
               Revalidates this instance.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.OnAttachedTo(Xamarin.Forms.Entry)">
            <summary>
               Attaches to the superclass and then calls the <see cref="M:Xamarin.Forms.Behavior`1.OnAttachedTo(T)" /> method
               on this object.
            </summary>
            <param name="bindable">To be added.</param>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.OnDetachingFrom(Xamarin.Forms.Entry)">
            <summary>
               Calls the <see cref="M:Xamarin.Forms.Behavior`1.OnDetachingFrom(`0)" /> method and then detaches from the
               superclass.
            </summary>
            <param name="bindable">The bindable object from which the behavior was detached.</param>
            <remarks>To be added.</remarks>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.OnFocused(System.Object,Xamarin.Forms.FocusEventArgs)">
            <summary>
               Handles the <see cref="E:Focused" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Xamarin.Forms.FocusEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.OnTextChanged(System.Object,Xamarin.Forms.TextChangedEventArgs)">
            <summary>
               Handles the <see cref="E:TextChanged" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Xamarin.Forms.TextChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase.OnUnfocused(System.Object,Xamarin.Forms.FocusEventArgs)">
            <summary>
               Handles the <see cref="E:Unfocused" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Xamarin.Forms.FocusEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.ComparisonValidatorBehavior">
            <summary>
               Can pass in an illegal character filter.  Also, to be valid, the two strings *must* match.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.ComparisonValidatorBehavior._compareEntry">
            <summary>
               The compare entry
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.ComparisonValidatorBehavior.#ctor(System.Action,System.Func{System.String,System.String})">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.ComparisonValidatorBehavior" /> class.
            </summary>
            <param name="onIsValidChangedAction">The on is valid changed action.</param>
            <param name="illegalCharFilter">The illegal character filter.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Behaviors.ComparisonValidatorBehavior.CompareEntry">
            <summary>
               Gets or sets the compare entry.
            </summary>
            <value>The compare entry.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.ComparisonValidatorBehavior.CompareEntryOnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
               Compares the entry on property changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="propertyChangedEventArgs">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.ComparisonValidatorBehavior.ValidateCompareEntry(Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase,System.String)">
            <summary>
               Validates the compare entry.
            </summary>
            <param name="behavior">The behavior.</param>
            <param name="str">The string.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.EmailValidatorBehavior">
            <summary>
               Class EmailValidatorBehavior.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.EmailValidatorBehavior.AT_SIGN">
            <summary>
               At sign
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.EmailValidatorBehavior.REG_EX_VALID_CHARS">
            <summary>
               The reg ex valid chars
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.EmailValidatorBehavior.#ctor(System.Action)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.EmailValidatorBehavior" /> class.
            </summary>
            <param name="onIsValidChangedAction">The on is valid changed action.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.EmailValidatorBehavior.EmailIllegalCharFunc(System.String)">
            <summary>
               Emails the illegal character function.
            </summary>
            <param name="arg">The argument.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.IIsValid">
            <summary>
               Implements IsValid and IsInvalid booleans.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Behaviors.IIsValid.IsValid">
            <summary>
               Returns true if ... is valid.
            </summary>
            <value><c>null</c> if [is valid] contains no value, <c>true</c> if [is valid]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.PhoneValidatorBehavior">
            <summary>
               Class PhoneValidatorBehavior.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.PhoneValidatorBehavior.REG_EX_VALID_CHARS">
            <summary>
               The reg ex valid chars
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.PhoneValidatorBehavior.#ctor(System.Action)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.PhoneValidatorBehavior" /> class.
            </summary>
            <param name="onIsValidChangedAction">The on is valid changed action.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.PhoneValidatorBehavior.PhoneNumberIllegalCharFunc(System.String)">
            <summary>
               Phones the number illegal character function.
            </summary>
            <param name="arg">The argument.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.UserNameValidatorBehavior">
            <summary>
               Class UserNameValidatorBehavior.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.UserNameValidatorBehavior.MAX_USER_NAME_LEN">
            <summary>
               The maximum user name length
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.UserNameValidatorBehavior.REG_EX_VALID_CHARS">
            <summary>
               The reg ex valid chars
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.UserNameValidatorBehavior.#ctor(System.Action)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.UserNameValidatorBehavior" /> class.
            </summary>
            <param name="onIsValidChangedAction">The on is valid changed action.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.UserNameValidatorBehavior.UserNameIllegalCharFunc(System.String)">
            <summary>
               Users the name illegal character function.
            </summary>
            <param name="arg">The argument.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Behaviors.ZipCodeValidatorBehavior">
            <summary>
               Class ZipCodeValidatorBehavior.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.BehaviorBase" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Behaviors.ZipCodeValidatorBehavior.HYPHEN">
            <summary>
               The hyphen
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.ZipCodeValidatorBehavior.#ctor(System.Action)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Behaviors.ZipCodeValidatorBehavior" /> class.
            </summary>
            <param name="onIsValidChangedAction">The on is valid changed action.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Behaviors.ZipCodeValidatorBehavior.ZipCodeIllegalCharFunc(System.String)">
            <summary>
               Zips the code illegal character function.
            </summary>
            <param name="arg">The argument.</param>
            <returns>System.String.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Commands.IStatefulViewModelCommand">
            <summary>
               This command remains in state whenever there are property changes for a page.
               It is also well-behaved on changes to OnNotifyPageCanBeSavedChanged.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Commands.IViewModelCommand" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Commands.IViewModelCommand" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Commands.StatefulViewModelCommand">
            <summary>
               Class StatefulViewModelCommand.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Commands.ViewModelCommand" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Commands.IStatefulViewModelCommand" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Commands.ViewModelCommand" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Commands.IStatefulViewModelCommand" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Commands.StatefulViewModelCommand._viewModel">
            <summary>
               The view model
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.StatefulViewModelCommand.#ctor(System.Action,Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel,System.Predicate{Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel})">
            <summary>
               Overrides how to set the command visibility:
               * When not busy (as with the base class)
               * When the page can be saved.
            </summary>
            <param name="action">The action.</param>
            <param name="viewModel">The view model.</param>
            <param name="canExecute">The can execute.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.StatefulViewModelCommand.ReleaseUnmanagedResources">
            <summary>
               Releases the unmanaged resources.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.StatefulViewModelCommand.OnNotifyPageCanBeSavedChanged(System.Object,Com.MarcusTS.SharedForms.Common.Notifications.NotifyPageCanBeSavedChangedMessage)">
            <summary>
               Called when [notify page can be saved changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Commands.IViewModelCommand">
            <summary>
               Interface IViewModelCommand
               Implements the <see cref="T:System.Windows.Input.ICommand" />
               Implements the <see cref="T:System.IDisposable" />
            </summary>
            <seealso cref="T:System.Windows.Input.ICommand" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.IViewModelCommand.RefreshCanExecute">
            <summary>
               Refreshes the can execute.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Commands.ViewModelCommand">
            <summary>
               Class ViewModelCommand.
               Implements the <see cref="T:Xamarin.Forms.Command" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Commands.IViewModelCommand" />
            </summary>
            <seealso cref="T:Xamarin.Forms.Command" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Commands.IViewModelCommand" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.ViewModelCommand.#ctor(System.Action,Com.MarcusTS.SharedForms.Common.Interfaces.IAmBusy,System.Predicate{Com.MarcusTS.SharedForms.Common.Interfaces.IAmBusy})">
            <summary>
               Ensures that the command is not available if the view model is busy.
            </summary>
            <param name="action">The action.</param>
            <param name="viewModel">The view model.</param>
            <param name="canExecute">The can execute.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.ViewModelCommand.Dispose">
            <summary>
               Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.ViewModelCommand.RefreshCanExecute">
            <summary>
               Refreshes the can execute.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.ViewModelCommand.ReleaseUnmanagedResources">
            <summary>
               Releases the unmanaged resources.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Commands.ViewModelCommand.OnViewModelIsBusyChanged(System.Object,System.EventArgs)">
            <summary>
               Called when [view model is busy changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.IAmBusy">
            <summary>
               The IsBusy interface.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IAmBusy.IsBusy">
            <summary>
               Gets a value indicating whether is busy.
            </summary>
            <value><c>true</c> if this instance is busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IAmBusy.IsBusyMessage">
            <summary>
               Gets the is busy message.
            </summary>
            <value>The is busy message.</value>
        </member>
        <member name="E:Com.MarcusTS.SharedForms.Common.Interfaces.IAmBusy.IsBusyChanged">
            <summary>
               Occurs when [is busy changed].
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.IAmValid">
            <summary>
               Implements IsValid and IsInvalid booleans.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IAmValid.IsValid">
            <summary>
               Returns true if ... is valid.
            </summary>
            <value><c>null</c> if [is valid] contains no value, <c>true</c> if [is valid]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.ICanPullToRefresh">
            <summary>
               Interface ICanPullToRefresh
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.ICanPullToRefresh.RefreshDataCommand">
            <summary>
               Gets the refresh data command.
            </summary>
            <value>The refresh data command.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.IHaveGenericId`1">
            <summary>
               Interface IHaveGenericId
            </summary>
            <typeparam name="IdT">The type of the identifier t.</typeparam>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Interfaces.IHaveGenericId`1.GetId">
            <summary>
               Gets the identifier.
            </summary>
            <returns>IdT.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Interfaces.IHaveGenericId`1.SetId(`0)">
            <summary>
               Sets the identifier.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.IHavePageViewModel`1">
            <summary>
               The HasViewModel interface. Implements a ViewModel of type T. T must be an IAmBusy. This is
               basically a marker interface for some kind of object that at least has a ViewModel. Used for IoC.
            </summary>
            <typeparam name="T">the type of ViewModel</typeparam>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IHavePageViewModel`1.ViewModel">
            <summary>
               Gets the view model.
            </summary>
            <value>The view model.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.IHaveViewModel`1">
            <summary>
               Implements a ViewModel of type T. Unlike <see cref="T:Com.MarcusTS.SharedForms.Common.Interfaces.IHavePageViewModel`1" />,
               this one only requires that the declaring view has a view model that itself implements IViewModel.
            </summary>
            <typeparam name="T">the type of ViewModel</typeparam>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IHaveViewModel`1.ViewModel">
            <summary>
               Gets the view model.
            </summary>
            <value>The view model.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.IMenuNavigationState">
            <summary>
               A view model base for pages.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IMenuNavigationState.AppState">
            <summary>
               The app state to navigate to
            </summary>
            <value>The state of the application.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IMenuNavigationState.MenuOrder">
            <summary>
               Gets the menu order.
            </summary>
            <value>The menu order.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IMenuNavigationState.MenuTitle">
            <summary>
               The menu title
            </summary>
            <value>The menu title.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IMenuNavigationState.ViewTitle">
            <summary>
               The page or view title (default: centered on the page)
            </summary>
            <value>The view title.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.IProvidePageEvents">
            <summary>
               Interface IProvidePageEvents
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IProvidePageEvents.GetEventBroadcaster">
            <summary>
               Regrettable use of object; we could type-cast, but than makes it difficult to pass
               IProvidePageEvents at lower levels without omniscient knowledge off the parent page type.
            </summary>
            <value>The get event broadcaster.</value>
            <remarks>
               The function is better than a property when there is a chance of nesting to view inside
               view, etc. Whenever this property is assigned, it will always seek a legal value.
               Otherwise, an assignment might begin with null and then never change. The root of these
               events is a known, valid page that should be seekable by any deriver or nested deriver.
            </remarks>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Interfaces.IUserEmail">
            <summary>
               The ViewModel interface.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Interfaces.IUserEmail.UserEmail">
            <summary>
               Gets or sets the user name.
            </summary>
            <value>The user email.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine">
            <summary>
               Interface IStateMachineBase
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine.DefaultState">
            <summary>
               Gets the default state.
            </summary>
            <value>The default state.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine.DIContainer">
            <summary>
               Gets or sets the di container.
            </summary>
            <value>The di container.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine.StartUpState">
            <summary>
               Gets the start up state.
            </summary>
            <value>The start up state.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine.GoToAppState(System.String,System.Boolean)">
            <summary>
               Goes the state of to application.
            </summary>
            <param name="newState">The new state.</param>
            <param name="forceState">Ignores the comparison with the last app state; this change must occur.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine.GoToDefaultState(System.String)">
            <summary>
               Goes to default state.
            </summary>
            <param name="newState">The new state.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine.GoToStartUpState">
            <summary>
               Goes the state of to start up.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase">
            <summary>
               Class StateMachineBase.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Navigation.ISimpleStateMachine" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase._lastAppState">
            <summary>
               The last application state
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase.DefaultState">
            <summary>
               Gets the default state.
            </summary>
            <value>The default state.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase.DIContainer">
            <summary>
               Gets or sets the di container.
            </summary>
            <value>The di container.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase.StartUpState">
            <summary>
               Gets the start up state.
            </summary>
            <value>The start up state.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase.GoToAppState(System.String,System.Boolean)">
            <summary>
               Goes the state of to application.
            </summary>
            <param name="newState">The new state.</param>
            <param name="forceState">Ignores the comparison with the last app state; this change must occur.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase.GoToDefaultState(System.String)">
            <summary>
               Goes to default state.
            </summary>
            <param name="newState">The new state.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase.GoToStartUpState">
            <summary>
               Goes the state of to start up.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase.GoToAppStateWithAdditionalPaths(Com.MarcusTS.SharedForms.Common.Navigation.StateMachineSubPath[])">
            <summary>
               Goes to a new state and then continues digging through nested states until the nested paths have been exhausted.
            </summary>
            <param name="nestedPaths">The nested paths.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.SimpleStateMachineBase.RespondToAppStateChange(System.String)">
            <summary>
               Responds to application state change.
            </summary>
            <param name="newState">The new state.</param>
            <returns>Task.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine">
            <summary>
               Interface IStateMachineBase
               Implements the <see cref="T:System.IDisposable" />
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine.MenuItems">
            <summary>
               Gets the menu items.
            </summary>
            <value>The menu items.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine.GoToAppState(System.String,System.Boolean)">
            <summary>
               Goes the state of to application.
            </summary>
            <param name="newState">The new state.</param>
            <param name="preventStackPush">if set to <c>true</c> [prevent stack push].</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine.GoToLandingPage(System.Boolean)">
            <summary>
               Goes to landing page.
            </summary>
            <param name="preventStackPush">if set to <c>true</c> [prevent stack push].</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine.GoToStartUpState">
            <summary>
               Goes the state of to start up.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase">
            <summary>
               A controller to manage which views and view models are shown for a given state
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase._lastPage">
            <summary>
               The last page
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase._lastAppState">
            <summary>
               The last application state
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.APP_STATES">
            <summary>
               Gets the application states.
            </summary>
            <value>The application states.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.AppStartUpState">
            <summary>
               Gets the state of the application start up.
            </summary>
            <value>The state of the application start up.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.MenuItems">
            <summary>
               Gets the menu items.
            </summary>
            <value>The menu items.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.Dispose">
            <summary>
               Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.GoToAppState(System.String,System.Boolean)">
            <summary>
               Goes the state of to application.
            </summary>
            <param name="newState">The new state.</param>
            <param name="preventStackPush">if set to <c>true</c> [prevent stack push].</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.GoToLandingPage(System.Boolean)">
            <summary>
               Goes to landing page.
            </summary>
            <param name="preventStackPush">if set to <c>true</c> [prevent stack push].</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.GoToStartUpState">
            <summary>
               Goes the state of to start up.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.Finalize">
            <summary>
               Finalizes an instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.GetMenuOrderFromAppState(System.String)">
            <summary>
               Gets the state of the menu order from application.
            </summary>
            <param name="appState">State of the application.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.ReleaseUnmanagedResources">
            <summary>
               Releases the unmanaged resources.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.RespondToAppStateChange(System.String,Com.MarcusTS.SharedForms.Common.Interfaces.IMenuNavigationState,System.Boolean)">
            <summary>
               Responds to application state change.
            </summary>
            <param name="newState">The new state.</param>
            <param name="menuData">The menu data.</param>
            <param name="preventStackPush">if set to <c>true</c> [prevent stack push].</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineBase.AppStartUpMessage">
            <summary>
               Class AppStartUpMessage.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineSubPath">
            <summary>
               Class StateMachineSubPath.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineSubPath.AppState">
            <summary>
               Gets or sets the state of the application.
            </summary>
            <value>The state of the application.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Navigation.StateMachineSubPath.StateMachine">
            <summary>
               Gets or sets the state machine.
            </summary>
            <value>The state machine.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.DialogFactory.ShowDecisionToast(System.String,System.Action,System.Boolean)">
            <summary>
               An important toast with an action that takes the user somewhere in response.
            </summary>
            <param name="toastStr">The toast message.</param>
            <param name="useTimeout">
               Whether to remove the toast after a timeout.  Not normal for this scenario: defaults to
               *false*.
            </param>
            <param name="action">The action to take once the user taps the toast.  *Required*.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.DialogFactory.ShowErrorToast(System.String,System.String,System.Boolean,System.Action)">
            <summary>
               An error toast to notify the user that something went wrong.
            </summary>
            <param name="toastStr">The toast message.</param>
            <param name="actionText">The button text</param>
            <param name="useTimeout">
               Whether to remove the toast after a timeout.  Not normal for this scenario: defaults to
               *false*.
            </param>
            <param name="action">The action to take once the user taps the toast.  Optional.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.DialogFactory.ShowExceptionToast(System.String,System.Exception,System.Boolean,System.Action)">
            <summary>
               An error toast to notify the user that an error has occurred.
            </summary>
            <param name="toastPrefix">
               The first part of the toast message.
               The second part will be added by this method (see below).
            </param>
            <param name="ex">The exception.</param>
            <param name="useTimeout">
               Whether to remove the toast after a timeout.  Not normal for this scenario: defaults to
               *false*.
            </param>
            <param name="action">The action to take once the user taps the toast.  Optional.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.DialogFactory.ShowInfoToast(System.String,System.String,System.Boolean,System.Action)">
            <summary>
               A passive toast in a benign color to indicate information only;
               does not normally trigger an action, but can.
            </summary>
            <param name="toastStr">The toast message.</param>
            <param name="actionText"></param>
            <param name="useTimeout">Whether to remove the toast after a timeout.  Defaults to *true*.</param>
            <param name="action">The action to take if the user taps the toast.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.DialogFactory.ShowToastInternal(System.String,System.String,Xamarin.Forms.Color,Xamarin.Forms.Color,Xamarin.Forms.Color,System.Boolean,System.Int32,System.Action)">
            <summary>
               Can call directly.
            </summary>
            <param name="toastStr"></param>
            <param name="actionText"></param>
            <param name="backgroundColor"></param>
            <param name="messageTextColor"></param>
            <param name="actionTextColor"></param>
            <param name="useTimeout"></param>
            <param name="toastDissolveSeconds"></param>
            <param name="action"></param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.IDeviceSizeChangeMessageArgs">
            <summary>
               Interface IDeviceSizeChangeMessageArgs
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.IDeviceSizeChangeMessageArgs.ScreenHeight">
            <summary>
               Gets or sets the height of the screen.
            </summary>
            <value>The height of the screen.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.IDeviceSizeChangeMessageArgs.ScreenWidth">
            <summary>
               Gets or sets the width of the screen.
            </summary>
            <value>The width of the screen.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage">
            <summary>
               Interface IMessage
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.IPageLifecycleMessageArgs">
            <summary>
               Interface IPageLifecycleMessageArgs
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.IPageLifecycleMessageArgs.SendingPage">
            <summary>
               Gets or sets the page event.
            </summary>
            <value>The page event.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.FormsMessengerUtils">
            <summary>
               A global static utility library to assist with Xamarin.Forms.MessagingCenter calls.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.FormsMessengerUtils.Send``1(``0,System.Object)">
            <summary>
               Sends the specified message.
            </summary>
            <typeparam name="TMessage">The type of the t message.</typeparam>
            <param name="message">The message.</param>
            <param name="sender">The sender.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.FormsMessengerUtils.Subscribe``1(System.Object,System.Action{System.Object,``0})">
            <summary>
               Subscribes the specified subscriber.
            </summary>
            <typeparam name="TMessage">The type of the t message.</typeparam>
            <param name="subscriber">The subscriber.</param>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.FormsMessengerUtils.Unsubscribe``1(System.Object)">
            <summary>
               Unsubscribes the specified subscriber.
            </summary>
            <typeparam name="TMessage">The type of the t message.</typeparam>
            <param name="subscriber">The subscriber.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangedMessage">
            <summary>
               Class AppStateChangedMessage.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs" />
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs" />
            </summary>
            <seealso
               cref="T:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangedMessage.#ctor(System.String,System.Boolean)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangedMessage" /> class.
            </summary>
            <param name="oldAppState">Old state of the application.</param>
            <param name="preventNavStackPush">if set to <c>true</c> [prevent nav stack push].</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs">
            <summary>
               Class AppStateChangeMessageArgs.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs.#ctor(System.String,System.Boolean)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs" /> class.
            </summary>
            <param name="oldAppState">Old state of the application.</param>
            <param name="preventNavStackPush">if set to <c>true</c> [prevent nav stack push].</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs.OldAppState">
            <summary>
               Gets or sets the old state of the application.
            </summary>
            <value>The old state of the application.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.AppStateChangeMessageArgs.PreventNavStackPush">
            <summary>
               Gets or sets a value indicating whether [prevent nav stack push].
            </summary>
            <value><c>true</c> if [prevent nav stack push]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.BroadcastDeviceSizeChangedMessage">
            <summary>
               Notifies the app that the device size has changed
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs" />
            </summary>
            <seealso
               cref="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.BroadcastDeviceSizeChangedMessage.#ctor(System.Single,System.Single)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.BroadcastDeviceSizeChangedMessage" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.ConnectivityChangedMessage">
            <summary>
               Class ConnectivityChangedMessage.
               Implements the
               <see cref="T:System.Boolean" />
            </summary>
            <seealso cref="T:System.Boolean" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs">
            <summary>
               This message is issued as the args whenever a local platform senses a change in its orientation.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IDeviceSizeChangeMessageArgs" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IDeviceSizeChangeMessageArgs" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IDeviceSizeChangeMessageArgs" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs.#ctor(System.Single,System.Single)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs.ScreenHeight">
            <summary>
               Gets or sets the height of the screen.
            </summary>
            <value>The height of the screen.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs.ScreenWidth">
            <summary>
               Gets or sets the width of the screen.
            </summary>
            <value>The width of the screen.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.FragileServiceFailureMessage">
            <summary>
               Class FragileServiceFailureMessage.
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.Common.Services.IFragileService" />
            </summary>
            <seealso
               cref="T:Com.MarcusTS.SharedForms.Common.Services.IFragileService" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.FragileServiceSuccessMessage">
            <summary>
               Class FragileServiceSuccessMessage.
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.Common.Services.IFragileService" />
            </summary>
            <seealso
               cref="T:Com.MarcusTS.SharedForms.Common.Services.IFragileService" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.GenericMessageWithPayload`1">
            <summary>
               Class GenericMessageWithPayload.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage" />
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.GenericMessageWithPayload`1.Payload">
            <summary>
               Gets or sets the payload.
            </summary>
            <value>The payload.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.LocalDeviceSizeChangedMessage">
            <summary>
               Notifies the orientation service that a the local device size has changed.
               Do *not* use for general broadcast, as it will recur!
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs" />
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs" />
            </summary>
            <seealso
               cref="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.DeviceSizeChangeMessageArgs" />
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.LocalDeviceSizeChangedMessage.#ctor(System.Single,System.Single)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.LocalDeviceSizeChangedMessage" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.MainPageBindingContextChangeRequestMessage">
            <summary>
               Class MainPageBindingContextChangeRequestMessage.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase" />
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase" />
            </summary>
            <seealso
               cref="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase" />
            <seealso cref="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.MainPageBindingContextChangeRequestMessage.PreventNavStackPush">
            <summary>
               Gets or sets a value indicating whether [prevent nav stack push].
            </summary>
            <value><c>true</c> if [prevent nav stack push]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.MainPageChangeRequestMessage">
            <summary>
               Class MainPageChangeRequestMessage.
               Implements the <see cref="!:GenericMessageWithPayload&lt;T&gt;.Forms.Page&gt;" />
               Implements the
               <see cref="!:Com.MarcusTS.SharedForms.Common.Notifications.GenericMessageWithPayload&lt;Xamarin.Forms.Page&gt;" />
            </summary>
            <seealso cref="!:Com.MarcusTS.SharedForms.Common.Notifications.GenericMessageWithPayload&lt;Xamarin.Forms.Page&gt;" />
            <seealso cref="!:GenericMessageWithPayload&lt;T&gt;.Forms.Page&gt;" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Notifications.MainPageChangeRequestMessage.PreventNavStackPush">
            <summary>
               Gets or sets a value indicating whether [prevent nav stack push].
            </summary>
            <value><c>true</c> if [prevent nav stack push]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.MenuLoadedMessage">
            <summary>
               Class MenuLoadedMessage.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.NavBarMenuTappedMessage">
            <summary>
               Class NavBarMenuTappedMessage.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.NoPayloadMessage">
            <summary>
               Class NoPayloadMessage.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Notifications.IMessage" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.NotifyPageCanBeSavedChangedMessage">
            <summary>
               Class NotifyPageCanBeSavedChangedMessage.
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel" />
            </summary>
            <seealso
               cref="T:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.ObjectDisappearingMessage">
            <summary>
               Class ObjectDisappearingMessage.
               Implements the <see cref="T:System.Object" />
               Implements the <see cref="T:System.Object" />
            </summary>
            <seealso cref="T:System.Object" />
            <seealso cref="T:System.Object" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.RefreshUIViewMessage">
            <summary>
               Class RefreshUIViewMessage.
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel" />
            </summary>
            <seealso
               cref="T:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Notifications.NotificationUtils">
            <summary>
               Class NotificationUtils.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Notifications.NotificationUtils.BODY">
            <summary>
               The body
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Notifications.NotificationUtils.ID">
            <summary>
               The identifier
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.NotificationUtils.HandleBackgroundNotification(System.String)">
            <summary>
               Sets various flags based on the id so the app can start and go to a given page.
            </summary>
            <param name="id">The identifier.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Notifications.NotificationUtils.HandleForegroundNotification(System.String,System.String)">
            <summary>
               Determine if this is a normal push notification or an error.
            </summary>
            <param name="id">The identifier.</param>
            <param name="body">The body.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Services.IFragileService">
            <summary>
               For identifying services that can fail and might require a response by the StateMachine.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.IFragileService.CanBeForcedOn">
            <summary>
               Gets a value indicating whether this instance can be forced on.
            </summary>
            <value><c>true</c> if this instance can be forced on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.IFragileService.CanTurnOnFromSettings">
            <summary>
               Gets a value indicating whether this instance can turn on from settings.
            </summary>
            <value><c>true</c> if this instance can turn on from settings; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.IFragileService.IsAvailable">
            <summary>
               Gets a value indicating whether this instance is available.
            </summary>
            <value><c>true</c> if this instance is available; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.IFragileService.IsOn">
            <summary>
               Gets a value indicating whether this instance is on.
            </summary>
            <value><c>true</c> if this instance is on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.IFragileService.IsServiceListening">
            <summary>
               Gets a value indicating whether this instance is service listening.
            </summary>
            <value><c>true</c> if this instance is service listening; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.IFragileService.ServiceName">
            <summary>
               Gets the name of the service.
            </summary>
            <value>The name of the service.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.IFragileService.CancelAllActivities">
            <summary>
               Cancels all activities.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.IFragileService.GoToSettings">
            <summary>
               Goes to settings.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.IFragileService.OfferToForceOn">
            <summary>
               Offers to force on.
            </summary>
            <returns>Task&lt;System.Boolean&gt;.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.IFragileService.RestartWhenPossible">
            <summary>
               Restarts the when possible.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.IFragileService.SetFailState">
            <summary>
               Sets the state of the fail.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.IFragileService.StartUp">
            <summary>
               Starts up.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase">
            <summary>
               Class FragileServiceBase.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Services.IFragileService" />
               Implements the <see cref="T:System.IDisposable" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Services.IFragileService" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.WAIT_SECONDS">
            <summary>
               The wait seconds
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase._startCancellationTokenSource">
            <summary>
               The start cancellation token source
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase._stopCancellationTokenSource">
            <summary>
               The stop cancellation token source
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase._stopTimer">
            <summary>
               The stop timer
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.Dispose">
            <summary>
               Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.CanBeForcedOn">
            <summary>
               Gets a value indicating whether this instance can be forced on.
            </summary>
            <value><c>true</c> if this instance can be forced on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.CanTurnOnFromSettings">
            <summary>
               Gets a value indicating whether this instance can turn on from settings.
            </summary>
            <value><c>true</c> if this instance can turn on from settings; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.IsAvailable">
            <summary>
               Gets a value indicating whether this instance is available.
            </summary>
            <value><c>true</c> if this instance is available; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.IsOn">
            <summary>
               Gets a value indicating whether this instance is on.
            </summary>
            <value><c>true</c> if this instance is on; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.IsServiceListening">
            <summary>
               Gets a value indicating whether this instance is service listening.
            </summary>
            <value><c>true</c> if this instance is service listening; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.ServiceName">
            <summary>
               Gets the name of the service.
            </summary>
            <value>The name of the service.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.CancelAllActivities">
            <summary>
               Cancels all activities.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.GoToSettings">
            <summary>
               Goes to settings.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.OfferToForceOn">
            <summary>
               Offers to force on.
            </summary>
            <returns>Task&lt;System.Boolean&gt;.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.RestartWhenPossible">
            <summary>
               1. Set a timer
               2. On tick see if the target service is available and can be started
               3. When  it is, start
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.SetFailState">
            <summary>
               Sets the state of the fail.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.StartUp">
            <summary>
               Starts up.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.Finalize">
            <summary>
               Finalizes an instance of the <see cref="T:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase" /> class.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.AddListeners">
            <summary>
               Adds the listeners.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.RemoveListeners">
            <summary>
               Removes the listeners.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.StartListeningToService">
            <summary>
               Starts the listening to service.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.StopListeningToService">
            <summary>
               Stops the listening to service.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.ReleaseUnmanagedResources">
            <summary>
               Releases the unmanaged resources.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.StartListening">
            <summary>
               Starts the listening.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.StopListening">
            <summary>
               Stops the listening.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.FragileServiceBase.StopListeningInBackground">
            <summary>
               Stops the listening in background.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Services.IKeyboardService">
            <summary>
               Interface IKeyboardService
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.IKeyboardService.HideKeyboard">
            <summary>
               Hides the keyboard.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Services.OrientationService">
            <summary>
               Class OrientationService.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.OrientationService.IsLandscape">
            <summary>
               Gets or sets a value indicating whether this instance is landscape.
            </summary>
            <value><c>true</c> if this instance is landscape; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.OrientationService.ScreenHeight">
            <summary>
               Gets or sets the height of the screen.
            </summary>
            <value>The height of the screen.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Common.Services.OrientationService.ScreenWidth">
            <summary>
               Gets or sets the width of the screen.
            </summary>
            <value>The width of the screen.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Services.OrientationService.HandleDeviceSizeChanged(System.Object,Com.MarcusTS.SharedForms.Common.Notifications.LocalDeviceSizeChangedMessage)">
            <summary>
               Handles the device size changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="message">The message.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.BindableUtils">
            <summary>
               Class BindableUtils.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.BindableUtils.CreateBindableProperty``2(System.String,``1,Xamarin.Forms.BindingMode,System.Action{``0,``1,``1})">
            <summary>
               Creates the bindable property.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="localPropName">Name of the local property.</param>
            <param name="defaultVal">The default value.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="callbackAction">The callback action.</param>
            <returns>BindableProperty.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.BindableUtils.CreateReadOnlyBindableProperty``2(System.String,``1,Xamarin.Forms.BindingMode,System.Action{``0,``1,``1})">
            <summary>
               Creates the read only bindable property.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="U"></typeparam>
            <param name="localPropName">Name of the local property.</param>
            <param name="defaultVal">The default value.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="callbackAction">The callback action.</param>
            <returns>BindableProperty.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.BindableUtils.SetUpBinding(Xamarin.Forms.BindableObject,Xamarin.Forms.BindableProperty,System.String,Xamarin.Forms.BindingMode,Xamarin.Forms.IValueConverter,System.Object,System.String,System.Object)">
            <summary>
               Sets up binding.
            </summary>
            <param name="view">The view.</param>
            <param name="bindableProperty">The bindable property.</param>
            <param name="viewModelPropertyName">Name of the view model property.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="converter">The converter.</param>
            <param name="converterParameter">The converter parameter.</param>
            <param name="stringFormat">The string format.</param>
            <param name="source">The source.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils">
            <summary>
               Class ColorUtils.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.DEEP_GRAY_BLUE">
            <summary>
               The deep gray blue
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.DEEP_GRAY_GREEN">
            <summary>
               The deep gray green
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.DEEP_GRAY_RED">
            <summary>
               The deep gray red
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.HEADER_AND_TOOLBAR_COLOR">
            <summary>
               The header and toolbar color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.HEADER_AND_TOOLBAR_COLOR_DEEP">
            <summary>
               The header and toolbar color deep
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.HEADER_AND_TOOLBAR_COLOR_PALE">
            <summary>
               The header and toolbar color pale
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.ILLEGAL_ENTRY_COLOR">
            <summary>
               The illegal entry color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.MAIN_PAGE_BACKGROUND_COLOR">
            <summary>
               The main page background color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.PALE_GRAY">
            <summary>
               The pale gray
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ColorUtils.SIDE_MENU_COLOR">
            <summary>
               The side menu color
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.FormsExtensions">
            <summary>
               Class FormsExtensions.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsExtensions.IsDifferentThan(Xamarin.Forms.Rectangle,Xamarin.Forms.Rectangle)">
            <summary>
               Determines whether [is different than] [the specified other rect].
            </summary>
            <param name="mainRect">The main rect.</param>
            <param name="otherRect">The other rect.</param>
            <returns><c>true</c> if [is different than] [the specified other rect]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsExtensions.IsSameAs(Xamarin.Forms.Rectangle,Xamarin.Forms.Rectangle)">
            <summary>
               Determines whether [is same as] [the specified other rect].
            </summary>
            <param name="mainRect">The main rect.</param>
            <param name="otherRect">The other rect.</param>
            <returns><c>true</c> if [is same as] [the specified other rect]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils">
            <summary>
               Class FormsUtils.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.FALSE_STR">
            <summary>
               The false string
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.TRUE_STR">
            <summary>
               The true string
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.BUTTON_RADIUS_FACTOR">
            <summary>
               The button radius factor
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.DEFAULT_TEXT_SIZE">
            <summary>
               The default text size
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.HAPTIC_VIBRATION_MILLISECONDS">
            <summary>
               The haptic vibration milliseconds
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.HEIGHT_PROPERTY_NAME">
            <summary>
               The height property name
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.NORMAL_BUTTON_FONT_SIZE">
            <summary>
               The normal button font size
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.SELECTED_BUTTON_FONT_SIZE">
            <summary>
               The selected button font size
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.SLOP">
            <summary>
               The slop
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.WIDTH_PROPERTY_NAME">
            <summary>
               The width property name
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.X_PROPERTY_NAME">
            <summary>
               The x property name
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.Y_PROPERTY_NAME">
            <summary>
               The y property name
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.MAJOR_BUTTON_HEIGHT">
            <summary>
               The major button height
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.MAJOR_BUTTON_WIDTH">
            <summary>
               The major button width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.SELECTED_IMAGE_BUTTON_BORDER_WIDTH">
            <summary>
               The selected image button border width
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.AddAnimationAndHapticFeedback(Xamarin.Forms.View,System.Boolean,System.Boolean)">
            <summary>
               Adds the animation and haptic feedback.
            </summary>
            <param name="view">The view.</param>
            <param name="animate">if set to <c>true</c> [animate].</param>
            <param name="vibrate">if set to <c>true</c> [vibrate].</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.AddAutoColumn(Xamarin.Forms.Grid)">
            <summary>
               Adds the automatic column.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.AddAutoRow(Xamarin.Forms.Grid)">
            <summary>
               Adds the automatic row.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.AddFixedColumn(Xamarin.Forms.Grid,System.Double)">
            <summary>
               Adds the fixed column.
            </summary>
            <param name="grid">The grid.</param>
            <param name="width">The width.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.AddFixedRow(Xamarin.Forms.Grid,System.Double)">
            <summary>
               Adds the fixed row.
            </summary>
            <param name="grid">The grid.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.AddStarColumn(Xamarin.Forms.Grid,System.Double)">
            <summary>
               Adds the star column.
            </summary>
            <param name="grid">The grid.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.AddStarRow(Xamarin.Forms.Grid,System.Double)">
            <summary>
               Adds the star row.
            </summary>
            <param name="grid">The grid.</param>
            <param name="factor">The factor.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.BoundsAreValidAndHaveChanged(Xamarin.Forms.Rectangle,System.String,Xamarin.Forms.Rectangle)">
            <summary>
               Boundses the are valid and have changed.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="propName">Name of the property.</param>
            <param name="lastBounds">The last bounds.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.ClearCompletely(Xamarin.Forms.Grid)">
            <summary>
               Clears the completely.
            </summary>
            <param name="grid">The grid.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.CreateRelativeOverlay(Xamarin.Forms.RelativeLayout,Xamarin.Forms.View)">
            <summary>
               Creates the relative overlay.
            </summary>
            <param name="layout">The layout.</param>
            <param name="viewToAdd">The view to add.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.EnumTryParse``1(System.String,``0@)">
            <summary>
               Enums the try parse.
            </summary>
            <typeparam name="EnumT">The type of the enum t.</typeparam>
            <param name="input">The input.</param>
            <param name="theEnum">The enum.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.ForceStyle(Xamarin.Forms.View,Xamarin.Forms.Style)">
            <summary>
               Forces the style.
            </summary>
            <param name="view">The view.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetAdjustedScreenWidth(System.Int32,System.Double)">
            <summary>
               Gets the width of the adjusted screen.
            </summary>
            <param name="viewIdx">Index of the view.</param>
            <param name="currentWidth">Width of the current.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetExpandingAbsoluteLayout">
            <summary>
               Gets the expanding absolute layout.
            </summary>
            <returns>AbsoluteLayout.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetExpandingGrid">
            <summary>
               Gets the expanding grid.
            </summary>
            <returns>Grid.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetExpandingRelativeLayout">
            <summary>
               Gets the expanding relative layout.
            </summary>
            <returns>RelativeLayout.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetExpandingStackLayout">
            <summary>
               Gets the expanding stack layout.
            </summary>
            <returns>StackLayout.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetImage(System.String,System.Double,System.Double,Xamarin.Forms.Aspect,System.Boolean,System.Type)">
            <summary>
               Gets the image.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="aspect">The aspect.</param>
            <param name="getFromResources">if set to <c>true</c> [get from resources].</param>
            <param name="resourceClass">The resource class.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetSimpleLabel(System.String,Xamarin.Forms.Color,Xamarin.Forms.TextAlignment,Xamarin.Forms.NamedSize,System.Double,Xamarin.Forms.FontAttributes,System.Double,System.Double,System.String,System.Object,Xamarin.Forms.LineBreakMode)">
            <summary>
               Gets the simple label.
            </summary>
            <param name="labelText">The label text.</param>
            <param name="textColor">Color of the text.</param>
            <param name="textAlignment">The text alignment.</param>
            <param name="fontNamedSize">Size of the font named.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontAttributes">The font attributes.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="labelBindingPropertyName">Name of the label binding property.</param>
            <param name="labelBindingSource">The label binding source.</param>
            <param name="breakMode">The break mode.</param>
            <returns>Label.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetSpacer(System.Double)">
            <summary>
               Gets the spacer.
            </summary>
            <param name="height">The height.</param>
            <returns>BoxView.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.HorizontalOptionsFromTextAlignment(Xamarin.Forms.TextAlignment)">
            <summary>
               Horizontals the options from text alignment.
            </summary>
            <param name="textAlignment">The text alignment.</param>
            <returns>LayoutOptions.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.IsDifferentThan(Xamarin.Forms.Color,Xamarin.Forms.Color)">
            <summary>
               Determines whether [is different than] [the specified second color].
            </summary>
            <param name="color">The color.</param>
            <param name="secondColor">Color of the second.</param>
            <returns><c>true</c> if [is different than] [the specified second color]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.IsUnsetOrDefault(Xamarin.Forms.Color)">
            <summary>
               Determines whether [is unset or default] [the specified color].
            </summary>
            <param name="color">The color.</param>
            <returns><c>true</c> if [is unset or default] [the specified color]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.IsValid(Xamarin.Forms.Color)">
            <summary>
               Returns true if ... is valid.
            </summary>
            <param name="color">The color.</param>
            <returns><c>true</c> if the specified color is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.MergeStyle``1(Xamarin.Forms.Style,Xamarin.Forms.Style)">
            <summary>
               Merges the style.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="mainStyle">The main style.</param>
            <param name="newStyle">The new style.</param>
            <returns>Style.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.ToEnum``1(System.String)">
            <summary>
               Converts to enum.
            </summary>
            <typeparam name="EnumT">The type of the enum t.</typeparam>
            <param name="enumAsString">The enum as string.</param>
            <returns>EnumT.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.ToOptions(Xamarin.Forms.LayoutAlignment)">
            <summary>
               Converts to options.
            </summary>
            <param name="alignment">The alignment.</param>
            <returns>LayoutOptions.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.WithoutChangingContext(System.Threading.Tasks.Task)">
            <summary>
               Runs a Task without changing the context (configure await is false).
            </summary>
            <param name="task">The task.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.WithoutChangingContext``1(System.Threading.Tasks.Task{``0})">
            <summary>
               Withouts the changing context.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="task">The task.</param>
            <returns>Task&lt;T&gt;.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.FormsUtils.GetExpandingScrollView">
            <summary>
               Gets the expanding scroll view.
            </summary>
            <returns>ScrollView.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.TaskHelper">
            <summary>
               Class TaskHelper.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.TaskHelper.BeginInvokeOnMainThreadAsync``1(System.Func{``0})">
            <summary>
               Begins the invoke on main thread asynchronous.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="a">a.</param>
            <returns>Task&lt;T&gt;.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.TaskHelper.BeginInvokeOnMainThreadAsync(System.Action)">
            <summary>
               Begins the invoke on main thread asynchronous.
            </summary>
            <param name="a">a.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.TaskHelper.RunParallel(System.Threading.Tasks.Task,System.Threading.Tasks.Task,System.Action)">
            <summary>
               Runs the parallel.
            </summary>
            <param name="task">The task.</param>
            <param name="taskCallback">The task callback.</param>
            <param name="actionCallback">The action callback.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils">
            <summary>
               Class ViewUtils.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OffScreenPositions">
            <summary>
               Enum OffScreenPositions
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OffScreenPositions.NONE">
            <summary>
               The none
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OffScreenPositions.LEFT">
            <summary>
               The left
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OffScreenPositions.TOP">
            <summary>
               The top
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OffScreenPositions.RIGHT">
            <summary>
               The right
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OffScreenPositions.BOTTOM">
            <summary>
               The bottom
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions">
            <summary>
               Enum OnScreenPositions
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.NONE">
            <summary>
               The none
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.LEFT_CENTER">
            <summary>
               The left center
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.TOP_LEFT">
            <summary>
               The top left
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.TOP_CENTER">
            <summary>
               The top center
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.TOP_RIGHT">
            <summary>
               The top right
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.RIGHT_CENTER">
            <summary>
               The right center
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.BOTTOM_LEFT">
            <summary>
               The bottom left
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.BOTTOM_CENTER">
            <summary>
               The bottom center
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.BOTTOM_RIGHT">
            <summary>
               The bottom right
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions.CENTER">
            <summary>
               The center
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageHeaderPositions">
            <summary>
               Enum StageHeaderPositions
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageHeaderPositions.NONE">
            <summary>
               The none
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageHeaderPositions.TOP">
            <summary>
               The top
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageToolbarPositions">
            <summary>
               Enum StageToolbarPositions
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageToolbarPositions.NONE">
            <summary>
               The none
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageToolbarPositions.BOTTOM">
            <summary>
               The bottom
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageToolbarPositions.LEFT">
            <summary>
               The left
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageToolbarPositions.TOP">
            <summary>
               The top
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageToolbarPositions.RIGHT">
            <summary>
               The right
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.SubStageFlowDirections">
            <summary>
               Enum SubStageFlowDirections
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.SubStageFlowDirections.LEFT_TO_RIGHT">
            <summary>
               The left to right
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.SubStageFlowDirections.RIGHT_TO_LEFT">
            <summary>
               The right to left
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.SubStageFlowDirections.TOP_TO_BOTTOM">
            <summary>
               The top to bottom
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.SubStageFlowDirections.BOTTOM_TO_TOP">
            <summary>
               The bottom to top
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ViewAlignments">
            <summary>
               Enum ViewAlignments
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ViewAlignments.START">
            <summary>
               The start
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ViewAlignments.MIDDLE">
            <summary>
               The middle
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ViewAlignments.END">
            <summary>
               The end
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ViewAlignments.JUSTIFY">
            <summary>
               The justify
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.IOS_TOP_MARGIN">
            <summary>
               The ios top margin
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.NOT_VISIBLE_OPACITY">
            <summary>
               The not visible opacity
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.VISIBLE_OPACITY">
            <summary>
               The visible opacity
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.IOS_NESTED_STAGE_REDUCTION">
            <summary>
               The ios nested stage reduction
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.AdjustedForScreenHeightBug(System.Single)">
            <summary>
               Adjusteds for screen height bug.
            </summary>
            <param name="originalHeight">Height of the original.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ConsiderIOSNestedStageHeightHack(System.Boolean)">
            <summary>
               Considers the ios nested stage height hack.
            </summary>
            <param name="isNestedStage">if set to <c>true</c> [is nested stage].</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.CreateOffScreenRect(Xamarin.Forms.Size,System.Double,System.Double,Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OffScreenPositions,System.Boolean,System.Double)">
            <summary>
               Creates the off screen rect.
            </summary>
            <param name="parentViewSize">Size of the parent view.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="position">The position.</param>
            <param name="forceLongSize">if set to <c>true</c> [force long size].</param>
            <param name="additionalTopAllowance">The additional top allowance.</param>
            <returns>Rectangle.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.CreateOffScreenRectWithForcedSide(Xamarin.Forms.Size,System.Double,Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OffScreenPositions,System.Double)">
            <summary>
               Creates the off screen rect with forced side.
            </summary>
            <param name="parentViewSize">Size of the parent view.</param>
            <param name="widthHeight">Height of the width.</param>
            <param name="position">The position.</param>
            <param name="additionalTopAllowance">The additional top allowance.</param>
            <returns>Rectangle.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.CreateOnScreenRect(Xamarin.Forms.Size,System.Double,System.Double,Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions,Xamarin.Forms.Thickness,System.Boolean,System.Double)">
            <summary>
               Creates an on-screen rectangle for the current control based on its width, height and position.
               If forceLongSize==true, either the width or height are set to the maximum screen width or height, depending on the
               position.
               forceLongSize *only* works with basic positions --
               - LEFT_CENTER
               - TOP_CENTER
               - RIGHT_CENTER
               - BOTTOM_CENTER
            </summary>
            <param name="parentViewSize">Size of the parent view.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="position">The position.</param>
            <param name="parentViewPadding">The parent view padding.</param>
            <param name="forceLongSize">if set to <c>true</c> [force long size].</param>
            <param name="additionalTopAllowance">The additional top allowance.</param>
            <returns>Rectangle.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.CreateOnScreenRectWithForcedSide(Xamarin.Forms.Size,System.Double,Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.OnScreenPositions,Xamarin.Forms.Thickness,System.Double)">
            <summary>
               Creates the on screen rect with forced side.
            </summary>
            <param name="parentViewSize">Size of the parent view.</param>
            <param name="widthHeight">Height of the width.</param>
            <param name="position">The position.</param>
            <param name="parentViewPadding">The parent view padding.</param>
            <param name="additionalTopAllowance">The additional top allowance.</param>
            <returns>Rectangle.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.CreateTasks(System.Threading.Tasks.Task[])">
            <summary>
               Creates the tasks.
            </summary>
            <param name="tasks">The tasks.</param>
            <returns>Task[].</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.FadeIn(Xamarin.Forms.View)">
            <summary>
               Fades the in.
            </summary>
            <param name="view">The view.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.FadeOut(Xamarin.Forms.View)">
            <summary>
               Fades the out.
            </summary>
            <param name="view">The view.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.GetMarginForRuntimePlatform">
            <summary>
               Gets the margin for runtime platform.
            </summary>
            <returns>Thickness.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.GetStartingYForRuntimePlatform">
            <summary>
               Gets the starting y for runtime platform.
            </summary>
            <returns>System.Single.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.IOSHeightHack(System.Boolean)">
            <summary>
               Ioses the height hack.
            </summary>
            <param name="isNested">if set to <c>true</c> [is nested].</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.IsIOS">
            <summary>
               Determines whether this instance is ios.
            </summary>
            <returns><c>true</c> if this instance is ios; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.IsNotVisible(Xamarin.Forms.View)">
            <summary>
               Determines whether [is not visible] [the specified view].
            </summary>
            <param name="view">The view.</param>
            <returns><c>true</c> if [is not visible] [the specified view]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ToOffScreenPosition(Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageToolbarPositions)">
            <summary>
               Converts to off screen position.
            </summary>
            <param name="stageToolbarPosition">The stage toolbar position.</param>
            <returns>OffScreenPositions.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ToOffScreenPosition(Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.SubStageFlowDirections)">
            <summary>
            
            </summary>
            <param name="flowDirection"></param>
            <returns></returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.ToOnScreenPosition(Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.StageToolbarPositions)">
            <summary>
               Converts to onscreenposition.
            </summary>
            <param name="stageToolbarPosition">The stage toolbar position.</param>
            <returns>OnScreenPositions.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.GetForcedHeight(System.Double,System.Boolean,Xamarin.Forms.Size)">
            <summary>
               Gets the height of the forced.
            </summary>
            <param name="height">The height.</param>
            <param name="forceLongSize">if set to <c>true</c> [force long size].</param>
            <param name="currentSize">Size of the current.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Common.Utils.ViewUtils.GetForcedWidth(System.Double,System.Boolean,Xamarin.Forms.Size)">
            <summary>
               Gets the width of the forced.
            </summary>
            <param name="width">The width.</param>
            <param name="forceLongSize">if set to <c>true</c> [force long size].</param>
            <param name="currentSize">Size of the current.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel">
            <summary>
               Interface IStatefulViewModel
               Implements the <see cref="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Interfaces.ICanPullToRefresh" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Interfaces.ICanPullToRefresh" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.AnyPropertyValueHasChanged">
            <summary>
               Gets a value indicating whether [any property value has changed].
            </summary>
            <value><c>true</c> if [any property value has changed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.IsRefreshing">
            <summary>
               Gets a value indicating whether this instance is refreshing.
            </summary>
            <value><c>true</c> if this instance is refreshing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.PageCanBeSaved">
            <summary>
               Gets a value indicating whether [page can be saved].
            </summary>
            <value>
               <c>null</c> if [page can be saved] contains no value, <c>true</c> if [page can be saved]; otherwise,
               <c>false</c>.
            </value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.PageIsValid">
            <summary>
               Gets a value indicating whether [page is valid].
            </summary>
            <value><c>null</c> if [page is valid] contains no value, <c>true</c> if [page is valid]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.ProceedWithoutPropertyChanges">
            <summary>
               Gets a value indicating whether [proceed without property changes].
            </summary>
            <value><c>true</c> if [proceed without property changes]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.AddBehaviors(Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase[])">
            <summary>
               Adds the behaviors.
            </summary>
            <param name="behaviors">The behaviors.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.CopyOriginalValuesToLiveValues">
            <summary>
               Copies the original values to live values.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.HandleInputValidationChanged">
            <summary>
               Handles the input validation changed.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.RevalidateBehaviors">
            <summary>
               Revalidates the behaviors.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.RevertToFailSafeOriginalValues">
            <summary>
               Reverts to fail safe original values.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel.SaveLiveValuesBackToOriginalValues">
            <summary>
               Saves the live values back to original values.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2">
            <summary>
               A view model specialized at inputting and saving values.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel" />
            </summary>
            <typeparam name="InterfaceT">
               The type of interface storing the savable values -
               can be the entire original view model or a sub-set.
            </typeparam>
            <typeparam name="ClassT">The type of class to be instantiated to create saved values.</typeparam>
            <seealso cref="T:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase" />
            <seealso cref="T:Com.MarcusTS.SharedForms.ViewModels.IStatefulViewModel" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._behaviors">
            <summary>
               The behaviors
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._cachedPropInfos">
            <summary>
               The cached property infos
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._anyPropertyValueHasChanged">
            <summary>
               Any property value has changed
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._isInitialized">
            <summary>
               The is initialized
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._originalValues">
            <summary>
               The original values
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._pageCanBeSaved">
            <summary>
               The page can be saved
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._pageIsValid">
            <summary>
               The page is valid
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._revertableOriginalValues">
            <summary>
               The revertable original values
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._startUpEntered">
            <summary>
               The start up entered
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2._viewModel">
            <summary>
               The view model
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2" /> class.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.ThisAsInterfaceT">
            <summary>
               Gets the this as interface t.
            </summary>
            <value>The this as interface t.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.AnyPropertyValueHasChanged">
            <summary>
               Gets a value indicating whether [any property value has changed].
            </summary>
            <value><c>true</c> if [any property value has changed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.IsRefreshing">
            <summary>
               Gets a value indicating whether this instance is refreshing.
            </summary>
            <value><c>true</c> if this instance is refreshing; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.PageCanBeSaved">
            <summary>
               Gets or sets a value indicating whether [page can be saved].
            </summary>
            <value>
               <c>null</c> if [page can be saved] contains no value, <c>true</c> if [page can be saved]; otherwise,
               <c>false</c>.
            </value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.PageIsValid">
            <summary>
               Gets or sets a value indicating whether [page is valid].
            </summary>
            <value><c>null</c> if [page is valid] contains no value, <c>true</c> if [page is valid]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.ProceedWithoutPropertyChanges">
            <summary>
               If true, we will allow the user to "save" even if no change has taken place.
               The default is false.
            </summary>
            <value><c>true</c> if [proceed without property changes]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.RefreshDataCommand">
            <summary>
               Gets the refresh data command.
            </summary>
            <value>The refresh data command.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.AddBehaviors(Com.MarcusTS.SharedForms.Common.Behaviors.IBehaviorBase[])">
            <summary>
               The deriver can add behaviors as properties, but *MUST* add them here so they
               will validate - !!!
            </summary>
            <param name="behaviors">The behaviors.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.CopyOriginalValuesToLiveValues">
            <summary>
               Copies the original values to live values.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.HandleInputValidationChanged">
            <summary>
               Handles the input validation changed.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.RevalidateBehaviors">
            <summary>
               Revalidates the behaviors.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.RevertToFailSafeOriginalValues">
            <summary>
               Copy the safe-safe original values back to the original values,
               then re-validate.  This is called when we have already destroyed the
               state of the original values at an attempt to save, but then failed to save.
               It restores the state of the UI based on differences between the "live" values
               and the *real* original values (before edit and save).
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.SaveLiveValuesBackToOriginalValues">
            <summary>
               Saves the live values back to original values.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.ASinglePropertyHasChanged(System.String)">
            <summary>
               as the single property has changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.InitializeOriginalValues(`0)">
            <summary>
               REQUIRED at the deriving constructor !!!
            </summary>
            <param name="originalValues">The original values.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.OnAnyPropertyValueHasChanged">
            <summary>
               Called when [any property value has changed].
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.RaiseForceRefreshUIView">
            <summary>
               Raises the force refresh UI view.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.RefreshData">
            <summary>
               Refreshes the data.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.RefreshDataAndOverwriteExisting">
            <summary>
               Refreshes the data and overwrite existing.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.ResetPageCanBeSaved">
            <summary>
               Resets the page can be saved.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.ResetAnyPropertyValueHasChanged">
            <summary>
               Resets any property value has changed.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.SetUpFodyPropertyChangedListener(System.Linq.Expressions.Expression{System.Func{System.Boolean}})">
            <summary>
               Sets up fody property changed listener.
            </summary>
            <param name="propExpression">The property expression.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.StartUpStatefulViewModel">
            <summary>
               Starts up stateful view model.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.StatefulViewModelBase`2.ViewModelOnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
               Views the model on property changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="propertyChangedEventArgs">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase">
            <summary>
               Interface IViewModelBase
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Common.Interfaces.IAmBusy" />
               Implements the <see cref="T:System.ComponentModel.INotifyPropertyChanged" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Common.Interfaces.IAmBusy" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="T:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase">
            <summary>
               The base class for all view models
               Implements the <see cref="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.ViewModels.IViewModelBase" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase._isBusy">
            <summary>
               The is busy
            </summary>
        </member>
        <member name="E:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase.IsBusyChanged">
            <summary>
               Occurs when [is busy changed].
            </summary>
        </member>
        <member name="E:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase.PropertyChanged">
            <summary>
               Occurs when [property changed].
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase.IsBusy">
            <summary>
               Gets or sets a value indicating whether this instance is busy.
            </summary>
            <value><c>true</c> if this instance is busy; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase.IsBusyMessage">
            <summary>
               Gets the is busy message.
            </summary>
            <value>The is busy message.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.ViewModels.ViewModelBase.OnPropertyChanged(System.String)">
            <summary>
               Called when [property changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1">
            <summary>
               Interface IEnumToggleImageLabelButton
            </summary>
            <typeparam name="EnumT">The type of the enum t.</typeparam>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1.ButtonBackColor">
            <summary>
               Gets or sets the color of the button back.
            </summary>
            <value>The color of the button back.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1.ButtonBorderColor">
            <summary>
               Gets or sets the color of the button border.
            </summary>
            <value>The color of the button border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1.ButtonBorderWidth">
            <summary>
               Gets or sets the width of the button border.
            </summary>
            <value>The width of the button border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1.CurrentSelection">
            <summary>
               Gets or sets the current selection.
            </summary>
            <value>The current selection.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1.LabelFontAttributes">
            <summary>
               Gets or sets the label font attributes.
            </summary>
            <value>The label font attributes.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1.LabelFontSize">
            <summary>
               Gets or sets the size of the label font.
            </summary>
            <value>The size of the label font.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1.LabelTextColor">
            <summary>
               Gets or sets the color of the label text.
            </summary>
            <value>The color of the label text.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1">
            <summary>
               Class EnumToggleImageLabelButtonBase.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1" />
            </summary>
            <typeparam name="EnumT">The type of the enum t.</typeparam>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.IEnumToggleImageLabelButton`1" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.DEFAULT_IMAGE_SUFFIX">
            <summary>
               The default image suffix
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.ButtonBackColorProperty">
            <summary>
               The button back color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.ButtonBorderColorProperty">
            <summary>
               The button border color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.ButtonBorderWidthProperty">
            <summary>
               The button border width property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.CurrentSelectionProperty">
            <summary>
               The current selection property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.LabelFontAttributesProperty">
            <summary>
               The label font attributes property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.LabelFontSizeProperty">
            <summary>
               The label font size property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.LabelTextColorProperty">
            <summary>
               The label text color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.DEFAULT_BUTTON_BACK_COLOR">
            <summary>
               The default button back color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.DEFAULT_BUTTON_BORDER_COLOR">
            <summary>
               The default button border color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.DEFAULT_BUTTON_BORDER_WIDTH">
            <summary>
               The default button border width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.DEFAULT_LABEL_FONT_ATTRIBUTES">
            <summary>
               The default label font attributes
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.DEFAULT_LABEL_FONT_SIZE">
            <summary>
               The default label font size
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.DEFAULT_LABEL_TEXT_COLOR">
            <summary>
               The default label text color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1._isInitializing">
            <summary>
               The is initializing
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1._buttonBackColor">
            <summary>
               The button back color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1._buttonBorderColor">
            <summary>
               The button border color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1._buttonBorderWidth">
            <summary>
               The button border width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1._imageLabelButtonStyles">
            <summary>
               The image label button styles
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1._labelFontAttributes">
            <summary>
               The label font attributes
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1._labelFontSize">
            <summary>
               The label font size
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1._labelTextColor">
            <summary>
               The label text color
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1" /> class.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.ImageLabelButtonStyles">
            <summary>
               Gets the image label button styles.
            </summary>
            <value>The image label button styles.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.UpdateButtonTextFromStyle">
            <summary>
               Required by this case; each style has its own text.
            </summary>
            <value><c>true</c> if [update button text from style]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.ButtonBackColor">
            <summary>
               Gets or sets the color of the button back.
            </summary>
            <value>The color of the button back.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.ButtonBorderColor">
            <summary>
               Gets or sets the color of the button border.
            </summary>
            <value>The color of the button border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.ButtonBorderWidth">
            <summary>
               Gets or sets the width of the button border.
            </summary>
            <value>The width of the button border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.CurrentSelection">
            <summary>
               Gets or sets the current selection.
            </summary>
            <value>The current selection.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.LabelFontAttributes">
            <summary>
               Gets or sets the label font attributes.
            </summary>
            <value>The label font attributes.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.LabelFontSize">
            <summary>
               Gets or sets the size of the label font.
            </summary>
            <value>The size of the label font.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.LabelTextColor">
            <summary>
               Gets or sets the color of the label text.
            </summary>
            <value>The color of the label text.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.EnumToggleImageLabelButtonBaseBindableProperty``1(System.String,``0,Xamarin.Forms.BindingMode,System.Action{Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase{`0},``0,``0})">
            <summary>
               Enums the toggle image label button base bindable property.
            </summary>
            <typeparam name="PropertyTypeT">The type of the property type t.</typeparam>
            <param name="localPropName">Name of the local property.</param>
            <param name="defaultVal">The default value.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="callbackAction">The callback action.</param>
            <returns>BindableProperty.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.CreateButtonStyle(`0,System.String)">
            <summary>
               Creates the button style.
            </summary>
            <param name="enumVal">The enum value.</param>
            <param name="enumString">The enum string.</param>
            <returns>Style.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.CreateImageFilePath(`0,System.String)">
            <summary>
               Creates the image file path.
            </summary>
            <param name="enumVal">The enum value.</param>
            <param name="enumString">The enum string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.CreateLabelButtonText(`0,System.String)">
            <summary>
               Creates the label button text.
            </summary>
            <param name="enumVal">The enum value.</param>
            <param name="enumString">The enum string.</param>
            <returns>System.String.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.CreateLabelStyle(`0,System.String)">
            <summary>
               Creates the label style.
            </summary>
            <param name="enumVal">The enum value.</param>
            <param name="enumString">The enum string.</param>
            <returns>Style.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.OnButtonStateChanged">
            <summary>
               Called when [button state changed].
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.CreateImageLabelButtonStyles">
            <summary>
               Creates the image label button styles.
            </summary>
            <returns>IList&lt;ImageLabelButtonStyle&gt;.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.RefreshImageLabelButtonStyles">
            <summary>
               Refreshes the image label button styles.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.EnumToggleImageLabelButtonBase`1.SetCurrentStyleByEnum(`0)">
            <summary>
               Sets the current style by enum.
            </summary>
            <param name="newVal">The new value.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1">
            <summary>
               Class FlexibleStack.
               Implements the <see cref="T:System.Collections.Generic.IEnumerable`1" />
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:System.Collections.Generic.IEnumerable`1" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1._items">
            <summary>
               The items
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1.GetEnumerator">
            <summary>
               Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
               Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
               An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the
               collection.
            </returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1.Clear">
            <summary>
               Clears this instance.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1.Peek">
            <summary>
               Peeks this instance.
            </summary>
            <returns>T.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1.Pop">
            <summary>
               Pops this instance.
            </summary>
            <returns>T.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1.Push(`0)">
            <summary>
               Pushes the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1.RemoveIfPresent(`0,System.Predicate{`0})">
            <summary>
               Removes if present.
            </summary>
            <param name="item">The item.</param>
            <param name="dupTest">The dup test.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.FlexibleStack`1.PopOrPeek(System.Boolean)">
            <summary>
               Pops the or peek.
            </summary>
            <param name="removeIt">if set to <c>true</c> [remove it].</param>
            <returns>T.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonSelectionStyles">
            <summary>Enum SelectionStyles</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonSelectionStyles.NoSelection">
            <summary>The no selection</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonSelectionStyles.SelectionButNoToggleAsFirstTwoStyles">
            <summary>The selection but no toggle as first two styles</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonSelectionStyles.ToggleSelectionAsFirstTwoStyles">
            <summary>Converts toggleselectionasfirsttwostyles.</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonSelectionStyles.ToggleSelectionThroughAllStyles">
            <summary>Converts toggleselectionthroughallstyles.</summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton">
            <summary>
               Interface IImageLabelButton Implements the <see cref="T:System.IDisposable" /> Implements the
               <see
                  cref="T:System.ComponentModel.INotifyPropertyChanged" />
            </summary>
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.AnimateButton">
            <summary>Gets or sets a value indicating whether [animate button].</summary>
            <value><c>true</c> if [animate button]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonCommand">
            <summary>Gets or sets the button command.</summary>
            <value>The button command.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonCommandBindingName">
            <summary>Gets or sets the name of the button command binding.</summary>
            <value>The name of the button command binding.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonCommandConverter">
            <summary>Gets or sets the button command converter.</summary>
            <value>The button command converter.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonCommandConverterParameter">
            <summary>Gets or sets the button command converter parameter.</summary>
            <value>The button command converter parameter.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonCommandSource">
            <summary>Gets or sets the button command source.</summary>
            <value>The button command source.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonCommandStringFormat">
            <summary>Gets or sets the button command string format.</summary>
            <value>The button command string format.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonCornerRadiusFactor">
            <summary>Gets or sets the button corner radius factor.</summary>
            <value>The button corner radius factor.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonCornerRadiusFixed">
            <summary>Gets or sets the button corner radius fixed.</summary>
            <value>The button corner radius fixed.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonImage">
            <summary>Gets or sets the button image.</summary>
            <value>The button image.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonLabel">
            <summary>Gets or sets the button label.</summary>
            <value>The button label.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonState">
            <summary>Gets or sets the state of the button.</summary>
            <value>The state of the button.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.CurrentStyle">
            <summary>Gets or sets the current style.</summary>
            <value>The current style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ImageHeight">
            <summary>Gets or sets the height of the image.</summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ImageLabelButtonStyles">
            <summary>Gets the image label button styles.</summary>
            <value>The image label button styles.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ImagePos">
            <summary>Gets or sets the image position.</summary>
            <value>The image position.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ImageWidth">
            <summary>Gets or sets the width of the image.</summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.IncludeHapticFeedback">
            <summary>Gets or sets a value indicating whether [include haptic feedback].</summary>
            <value><c>true</c> if [include haptic feedback]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.IsInstantiating">
            <summary>Gets or sets a value indicating whether this instance is instantiating.</summary>
            <value><c>true</c> if this instance is instantiating; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.IsSelected">
            <summary>Gets a value indicating whether this instance is selected.</summary>
            <value><c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.LabelHeight">
            <summary>Gets or sets the height of the label.</summary>
            <value>The height of the label.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.LabelPos">
            <summary>Gets or sets the label position.</summary>
            <value>The label position.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.LabelWidth">
            <summary>Gets or sets the width of the label.</summary>
            <value>The width of the label.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.PseudoPadding">
            <summary>Gets or sets the pseudo padding.</summary>
            <value>The pseudo padding.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.SelectionGroup">
            <summary>Gets or sets the selection group.</summary>
            <value>The selection group.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.SelectionStyle">
            <summary>Gets or sets the selection style.</summary>
            <value>The selection style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.UpdateButtonTextFromStyle">
            <summary>Gets a value indicating whether [update button text from style].</summary>
            <value><c>true</c> if [update button text from style]; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ButtonStateChanged">
            <summary>Occurs when [button state changed].</summary>
        </member>
        <member name="E:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton.ImageLabelButtonPressed">
            <summary>Occurs when [image label button pressed].</summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase">
            <summary>
               A button that can contain either an image and/or a label. Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.Views.Controls.ShapeView" />
               Implements the
               <see
                  cref="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.ShapeView" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.DEFAULT_BUTTON_RADIUS_FACTOR">
            <summary>The default button radius factor</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.DEFAULT_PSEUDO_PADDING">
            <summary>The default pseudo padding</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.AnimateButtonProperty">
            <summary>The animate button property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandBindingNameProperty">
            <summary>The button command binding name property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandConverterParameterProperty">
            <summary>The button command converter parameter property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandConverterProperty">
            <summary>The button command converter property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandProperty">
            <summary>The button command property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandStringFormatProperty">
            <summary>The button command string format property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonImageProperty">
            <summary>The button image property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonLabelProperty">
            <summary>The button label property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CornerRadiusFactorProperty">
            <summary>The corner radius factor property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CornerRadiusFixedProperty">
            <summary>The corner radius fixed property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CurrentStyleProperty">
            <summary>The current style property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ImageHeightProperty">
            <summary>The image height property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ImagePosProperty">
            <summary>The image position property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ImageWidthProperty">
            <summary>The image width property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.IncludeHapticFeedbackProperty">
            <summary>The include haptic feedback property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.LabelPosProperty">
            <summary>The label position property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SelectionGroupProperty">
            <summary>The selection group property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SelectionStyleProperty">
            <summary>The selection style property</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._layout">
            <summary>The layout</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._tapGesture">
            <summary>The tap gesture</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonCommand">
            <summary>The button command</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonCommandBindingName">
            <summary>The button command binding name</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonCommandConverter">
            <summary>The button command converter</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonCommandConverterParameter">
            <summary>The button command converter parameter</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonCommandSource">
            <summary>The button command source</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonImage">
            <summary>The button image</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonLabel">
            <summary>The button label</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonState">
            <summary>The button state</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._buttonStateAssignedFromStyle">
            <summary>The button state assigned from style</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._cornerRadiusFactor">
            <summary>The corner radius factor</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._cornerRadiusFixed">
            <summary>The corner radius fixed</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._currentStyle">
            <summary>The current style</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._imageHeight">
            <summary>The image height</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._imagePos">
            <summary>The image position</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._imageWidth">
            <summary>The image width</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._isInstantiating">
            <summary>The is instantiating</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._isReleasing">
            <summary>The is releasing</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._labelHeight">
            <summary>The label height</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._labelPos">
            <summary>The label position</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._labelWidth">
            <summary>The label width</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._lastBounds">
            <summary>The last bounds</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._lastHeight">
            <summary>The last height</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._lastImageFileName">
            <summary>The last image file name</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._lastWidth">
            <summary>The last width</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._pseudoPadding">
            <summary>The pseudo padding</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._rearrangeContentEntered">
            <summary>The rearrange content entered</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._selectionGroup">
            <summary>The selection group</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._selectionStyle">
            <summary>The selection style</summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase._tappedListenerEntered">
            <summary>The tapped listener entered</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase" /> class.</summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.IsDisabled">
            <summary>Gets a value indicating whether this instance is disabled.</summary>
            <value><c>true</c> if this instance is disabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CurrentSizeBestGuess">
            <summary>Gets the current size best guess.</summary>
            <value>The current size best guess.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.Margin">
            <summary>Gets or sets the margin for the view.</summary>
            <value>To be added.</value>
            <remarks>To be added.</remarks>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.Padding">
            <summary>Gets or sets the inner padding of the Layout.</summary>
            <value>The Thickness values for the layout. The default value is a Thickness with all values set to 0.</value>
            <remarks>
               <para>
                  The padding is the space between the bounds of a layout and the bounding region into which its children should
                  be arranged into.
               </para>
               <para>The following example shows setting the padding of a Layout to inset its children.</para>
               <example>
                  <code lang="csharp lang-csharp">
            <![CDATA[
            var stackLayout = new StackLayout {
            Padding = new Thickness (10, 10, 10, 20),
            Children = {
            new Label {Text = "Hello"},
            new Label {Text = "World"}
            }
            }
            ]]>
            </code>
               </example>
            </remarks>
        </member>
        <member name="E:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonStateChanged">
            <summary>Occurs when [button state changed].</summary>
        </member>
        <member name="E:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ImageLabelButtonPressed">
            <summary>Occurs when [image label button pressed].</summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.AnimateButton">
            <summary>Gets or sets a value indicating whether [animate button].</summary>
            <value><c>true</c> if [animate button]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommand">
            <summary>Gets or sets the button command.</summary>
            <value>The button command.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandBindingName">
            <summary>Gets or sets the name of the button command binding.</summary>
            <value>The name of the button command binding.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandConverter">
            <summary>Gets or sets the button command converter.</summary>
            <value>The button command converter.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandConverterParameter">
            <summary>Gets or sets the button command converter parameter.</summary>
            <value>The button command converter parameter.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandSource">
            <summary>Gets or sets the button command source.</summary>
            <value>The button command source.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCommandStringFormat">
            <summary>Gets or sets the button command string format.</summary>
            <value>The button command string format.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCornerRadiusFactor">
            <summary>Gets or sets the button corner radius factor.</summary>
            <value>The button corner radius factor.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonCornerRadiusFixed">
            <summary>Gets or sets the button corner radius fixed.</summary>
            <value>The button corner radius fixed.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonImage">
            <summary>Gets or sets the button image.</summary>
            <value>The button image.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonLabel">
            <summary>Gets or sets the button label.</summary>
            <value>The button label.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ButtonState">
            <summary>Gets or sets the state of the button.</summary>
            <value>The state of the button.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CurrentStyle">
            <summary>Gets or sets the current style.</summary>
            <value>The current style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ImageHeight">
            <summary>Gets or sets the height of the image.</summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ImageLabelButtonStyles">
            <summary>Gets the image label button styles.</summary>
            <value>The image label button styles.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ImagePos">
            <summary>Gets or sets the image position.</summary>
            <value>The image position.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ImageWidth">
            <summary>Gets or sets the width of the image.</summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.IncludeHapticFeedback">
            <summary>Gets or sets a value indicating whether [include haptic feedback].</summary>
            <value><c>true</c> if [include haptic feedback]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.IsInstantiating">
            <summary>Gets or sets a value indicating whether this instance is instantiating.</summary>
            <value><c>true</c> if this instance is instantiating; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.IsSelected">
            <summary>Gets a value indicating whether this instance is selected.</summary>
            <value><c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.LabelHeight">
            <summary>Gets or sets the height of the label.</summary>
            <value>The height of the label.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.LabelPos">
            <summary>Gets or sets the label position.</summary>
            <value>The label position.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.LabelWidth">
            <summary>Gets or sets the width of the label.</summary>
            <value>The width of the label.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.PseudoPadding">
            <summary>Gets or sets the pseudo padding.</summary>
            <value>The pseudo padding.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SelectionGroup">
            <summary>Gets or sets the selection group.</summary>
            <value>The selection group.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SelectionStyle">
            <summary>Gets or sets the selection style.</summary>
            <value>The selection style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.UpdateButtonTextFromStyle">
            <summary>Gets a value indicating whether [update button text from style].</summary>
            <value><c>true</c> if [update button text from style]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.Dispose">
            <summary>
               Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.Finalize">
            <summary>Finalizes an instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase" /> class.</summary>
        </member>
        <member name="E:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.IAmSelectedStatic">
            <summary>Occurs when [i am selected static].</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CreateButtonStyle(Xamarin.Forms.Color,System.Nullable{System.Double},Xamarin.Forms.Color)">
            <summary>Creates the button style.</summary>
            <param name="backColor">Color of the back.</param>
            <param name="borderWidth">Width of the border.</param>
            <param name="borderColor">Color of the border.</param>
            <returns>Style.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CreateLabelStyle(Xamarin.Forms.Color,System.Double,Xamarin.Forms.FontAttributes)">
            <summary>Creates the label style.</summary>
            <param name="textColor">Color of the text.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontAttributes">The font attributes.</param>
            <returns>Style.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CreateToggleImageLabelButtonBindableProperty``1(System.String,``0,Xamarin.Forms.BindingMode,System.Action{Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase,``0,``0})">
            <summary>Creates the toggle image label button bindable property.</summary>
            <typeparam name="PropertyTypeT">The type of the property type t.</typeparam>
            <param name="localPropName">Name of the local property.</param>
            <param name="defaultVal">The default value.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="callbackAction">The callback action.</param>
            <returns>BindableProperty.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.Dispose(System.Boolean)">
            <summary>Releases unmanaged and - optionally - managed resources.</summary>
            <param name="disposing">
               <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.AfterContentSet">
            <summary>Afters the content set.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CallRecreateImageSafely">
            <summary>Calls the recreate image safely.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.Deselect">
            <summary>Deselects this instance.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.HandleTapGestureTapped(System.Object,System.EventArgs)">
            <summary>Handles the tap gesture tapped.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.OnButtonCommandCreated">
            <summary>Called when [button command created].</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.OnButtonStateChanged">
            <summary>Called when [button state changed].</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SetAllStyles">
            <summary>Sets all styles.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SetButtonStyle">
            <summary>Sets the button style.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SetCurrentStyleByButtonText(System.String)">
            <summary>Sets the current style by button text.</summary>
            <param name="buttonText">The button text.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SetLabelStyle">
            <summary>Sets the label style.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.StartUp">
            <summary>Starts up.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.BroadcastIfSelected">
            <summary>Broadcasts if selected.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CallStartup">
            <summary>Calls the startup.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.CurrentStyleIndexFound(System.Int32@)">
            <summary>Currents the style index found.</summary>
            <param name="styleIdx">Index of the style.</param>
            <returns><c>true</c> if XXXX, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.HandleButtonCommandCanExecuteChanged(System.Object,System.EventArgs)">
            <summary>Handles the button command can execute changed.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.HandlePropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Handles the property changed.</summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.HandleStaticSelectionChanges(Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton)">
            <summary>Handles the static selection changes.</summary>
            <param name="button">The button.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.RearrangeContent">
            <summary>Rearranges the content.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.RecreateImage">
            <summary>Recreates the image.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ReleaseUnmanagedResources">
            <summary>Releases the unmanaged resources.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.RemoveButtonCommandEventListener">
            <summary>Removes the button command event listener.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SetCornerRadius">
            <summary>Sets the corner radius.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.SetUpCompleteButtonCommandBinding">
            <summary>Sets up complete button command binding.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.ToggleCurrentStyle">
            <summary>Converts toggle currentstyle.</summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase.UpdateButtonText">
            <summary>Updates the button text.</summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle">
            <summary>
               Interface IImageLabelButtonStyle
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle.ButtonStyle">
            <summary>
               Gets or sets the button style.
            </summary>
            <value>The button style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle.ButtonText">
            <summary>
               Gets or sets the button text.
            </summary>
            <value>The button text.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle.FireCommand">
            <summary>
               Gets or sets a value indicating whether [fire command].
            </summary>
            <value><c>true</c> if [fire command]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle.GetImageFromResource">
            <summary>
               Gets or sets a value indicating whether [get image from resource].
            </summary>
            <value><c>true</c> if [get image from resource]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle.ImageFilePath">
            <summary>
               Gets or sets the image file path.
            </summary>
            <value>The image file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle.ImageResourceClassType">
            <summary>
               Gets or sets the type of the image resource class.
            </summary>
            <value>The type of the image resource class.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle.InternalButtonState">
            <summary>
               Gets or sets the state of the internal button.
            </summary>
            <value>The state of the internal button.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle.LabelStyle">
            <summary>
               Gets or sets the label style.
            </summary>
            <value>The label style.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle">
            <summary>
               Class ImageLabelButtonStyle.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButtonStyle" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle.ButtonStyle">
            <summary>
               Gets or sets the button style.
            </summary>
            <value>The button style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle.ButtonText">
            <summary>
               Gets or sets the button text.
            </summary>
            <value>The button text.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle.FireCommand">
            <summary>
               Gets or sets a value indicating whether [fire command].
            </summary>
            <value><c>true</c> if [fire command]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle.GetImageFromResource">
            <summary>
               Gets or sets a value indicating whether [get image from resource].
            </summary>
            <value><c>true</c> if [get image from resource]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle.ImageFilePath">
            <summary>
               Gets or sets the image file path.
            </summary>
            <value>The image file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle.ImageResourceClassType">
            <summary>
               Gets or sets the type of the image resource class.
            </summary>
            <value>The type of the image resource class.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle.InternalButtonState">
            <summary>
               Gets or sets the state of the internal button.
            </summary>
            <value>The state of the internal button.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle.LabelStyle">
            <summary>
               Gets or sets the label style.
            </summary>
            <value>The label style.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ISelectionImageLabelButton">
            <summary>
               Interface ISelectionImageLabelButton
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISelectionImageLabelButton.GetImageFromResource">
            <summary>
               Gets or sets a value indicating whether [get image from resource].
            </summary>
            <value><c>true</c> if [get image from resource]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISelectionImageLabelButton.ImageResourceClassType">
            <summary>
               Gets or sets the type of the image resource class.
            </summary>
            <value>The type of the image resource class.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISelectionImageLabelButton.MultiSelectAllowed">
            <summary>
               Gets or sets a value indicating whether [multi select allowed].
            </summary>
            <value><c>true</c> if [multi select allowed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase">
            <summary>
               A button that can select an item among a master collection of items.
               Multi-select is supported.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ISelectionImageLabelButton" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.ISelectionImageLabelButton" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.GetImageFromResourceProperty">
            <summary>
               The get image from resource property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.ImageResourceClassTypeProperty">
            <summary>
               The image resource class type property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.MultiSelectAllowedProperty">
            <summary>
               The multi select allowed property
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase" /> class.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.IsDisabled">
            <summary>
               Gets a value indicating whether this instance is disabled.
            </summary>
            <value><c>true</c> if this instance is disabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.GetImageFromResource">
            <summary>
               Gets or sets a value indicating whether [get image from resource].
            </summary>
            <value><c>true</c> if [get image from resource]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.ImageResourceClassType">
            <summary>
               Gets or sets the type of the image resource class.
            </summary>
            <value>The type of the image resource class.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.IsSelected">
            <summary>
               Gets a value indicating whether this instance is selected.
            </summary>
            <value><c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.MultiSelectAllowed">
            <summary>
               Gets or sets a value indicating whether [multi select allowed].
            </summary>
            <value><c>true</c> if [multi select allowed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.UpdateButtonTextFromStyle">
            <summary>
               Required by this case; each style has its own text.
            </summary>
            <value><c>true</c> if [update button text from style]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.CreateSelectionImageLabelButtonBindableProperty``1(System.String,``0,Xamarin.Forms.BindingMode,System.Action{Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase,``0,``0})">
            <summary>
               Creates the selection image label button bindable property.
            </summary>
            <typeparam name="PropertyTypeT">The type of the property type t.</typeparam>
            <param name="localPropName">Name of the local property.</param>
            <param name="defaultVal">The default value.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="callbackAction">The callback action.</param>
            <returns>BindableProperty.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.Deselect">
            <summary>
               Deselects this instance.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SelectionImageLabelButtonBase.OnButtonCommandCreated">
            <summary>
               Called when [button command created].
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ShapeType">
            <summary>
               Represents pre-defined shape types
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.Box">
            <summary>
               A 4-sides shape (square/rectangle) - can have rounded corners
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.Circle">
            <summary>
               A circle shape with a radius equals to the minimum value between height &amp; width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.Star">
            <summary>
               A star shape for which you can define the number of points and the radius ratio
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.Triangle">
            <summary>
               A triangle shape - the appearance depends on the height/width ratio
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.Oval">
            <summary>
               An oval shape - the appearance depends on the height/width ratio
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.Diamond">
            <summary>
               A diamond shape - 4-sides - the same you can find in a card deck - the appearance depends on the height/width ratio
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.Heart">
            <summary>
               A heart shape - the appearance depends on the minimum value between height &amp; width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.ProgressCircle">
            <summary>
               A progress circle shape acting like a progress bar with a radius equals to the minimum value between height &amp;
               width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeType.Path">
            <summary>
               A custom path shape defined by a list of points
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ShapeView">
            <summary>
               This class allows you to draw different kind of shapes in your Xamarin.Forms PCL
               Implements the <see cref="T:Xamarin.Forms.ContentView" />
            </summary>
            <seealso cref="T:Xamarin.Forms.ContentView" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.BorderColorProperty">
            <summary>
               The border color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.BorderWidthProperty">
            <summary>
               The border width property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.ColorProperty">
            <summary>
               The color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.CornerRadiusProperty">
            <summary>
               The corner radius property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.NumberOfPointsProperty">
            <summary>
               The number of points property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.PointsProperty">
            <summary>
               The points property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.ProgressBorderColorProperty">
            <summary>
               The progress border color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.ProgressBorderWidthProperty">
            <summary>
               The progress border width property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.ProgressProperty">
            <summary>
               The progress property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.RadiusRatioProperty">
            <summary>
               The radius ratio property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.ShapeTypeProperty">
            <summary>
               The shape type property
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.BorderColor">
            <summary>
               Gets or sets the border color (ignored if fully transparent or BorderColor &lt;= 0) - default value is Color.Black
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.BorderWidth">
            <summary>
               Gets or sets the border width (ignored if value is &lt; 0 or BorderColor is fully transparent) - default value is 0
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.Color">
            <summary>
               Gets or sets the fill color - default value is Color.Default
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.CornerRadius">
            <summary>
               Gets or sets the corner radius - (ignored if &lt;=0) - default value is 0
            </summary>
            <value>The corner radius.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.NumberOfPoints">
            <summary>
               Gets or sets the number of points of a star - only for Star shape - default value is 5
            </summary>
            <value>The number of points.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.Points">
            <summary>
               Gets or sets the points describing the path - (ignored if null or empty) - only for Path shape - default value is
               null
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.Progress">
            <summary>
               Gets or sets the progress value - range from 0 to 100 - only for CircleProgress shape - default value is 0
            </summary>
            <value>The progress.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.ProgressBorderColor">
            <summary>
               Gets or sets the progress border color (ignored if fully transparent or ProgressBorderWidth &lt;= 0) - default value
               is Color.Black
            </summary>
            <value>The color of the progress border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.ProgressBorderWidth">
            <summary>
               Gets or sets the progress border width - only for CircleProgress shape - default value is 3
            </summary>
            <value>The width of the progress border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.RadiusRatio">
            <summary>
               Gets or sets the ratio between inner radius and outer radius (outer = inner * RadiusRatio) - only for Star shape -
               default value is 0.5
            </summary>
            <value>The radius ratio.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ShapeView.ShapeType">
            <summary>
               Gets or sets the shape type - default value is ShapeType.Box
            </summary>
            <value>The type of the shape.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton">
            <summary>
               Interface ISimpleImageLabelButton
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton.ButtonBackColor">
            <summary>
               Gets or sets the color of the button back.
            </summary>
            <value>The color of the button back.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton.ButtonBorderColor">
            <summary>
               Gets or sets the color of the button border.
            </summary>
            <value>The color of the button border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton.ButtonBorderWidth">
            <summary>
               Gets or sets the width of the button border.
            </summary>
            <value>The width of the button border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton.ImageFilePath">
            <summary>
               Gets or sets the image file path.
            </summary>
            <value>The image file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton.LabelFontAttributes">
            <summary>
               Gets or sets the label font attributes.
            </summary>
            <value>The label font attributes.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton.LabelFontSize">
            <summary>
               Gets or sets the size of the label font.
            </summary>
            <value>The size of the label font.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton.LabelText">
            <summary>
               Gets or sets the label text.
            </summary>
            <value>The label text.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton.LabelTextColor">
            <summary>
               Gets or sets the color of the label text.
            </summary>
            <value>The color of the label text.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton">
            <summary>
               A button that can contain either an image and/or a label.
               This button is not selectable or toggle-able.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.ISimpleImageLabelButton" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ButtonBackColorProperty">
            <summary>
               The button back color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ButtonBorderColorProperty">
            <summary>
               The button border color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ButtonBorderWidthProperty">
            <summary>
               The button border width property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ImageFilePathProperty">
            <summary>
               The image file path property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.LabelFontAttributesProperty">
            <summary>
               The label font attributes property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.LabelFontSizeProperty">
            <summary>
               The label font size property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.LabelTextColorProperty">
            <summary>
               The label text color property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.LabelTextProperty">
            <summary>
               The label text property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton._buttonBackColor">
            <summary>
               The button back color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton._buttonBorderColor">
            <summary>
               The button border color
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton._buttonBorderWidth">
            <summary>
               The button border width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton._labelFontAttributes">
            <summary>
               The label font attributes
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton._labelFontSize">
            <summary>
               The label font size
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton._labelText">
            <summary>
               The label text
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton._labelTextColor">
            <summary>
               The label text color
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton" /> class.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.IsDisabled">
            <summary>
               Gets a value indicating whether this instance is disabled.
            </summary>
            <value><c>true</c> if this instance is disabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ButtonBackColor">
            <summary>
               Gets or sets the color of the button back.
            </summary>
            <value>The color of the button back.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ButtonBorderColor">
            <summary>
               Gets or sets the color of the button border.
            </summary>
            <value>The color of the button border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ButtonBorderWidth">
            <summary>
               Gets or sets the width of the button border.
            </summary>
            <value>The width of the button border.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ImageFilePath">
            <summary>
               Gets or sets the image file path.
            </summary>
            <value>The image file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.IsSelected">
            <summary>
               Gets a value indicating whether this instance is selected.
            </summary>
            <value><c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.LabelFontAttributes">
            <summary>
               Gets or sets the label font attributes.
            </summary>
            <value>The label font attributes.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.LabelFontSize">
            <summary>
               Gets or sets the size of the label font.
            </summary>
            <value>The size of the label font.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.LabelText">
            <summary>
               Gets or sets the label text.
            </summary>
            <value>The label text.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.LabelTextColor">
            <summary>
               Gets or sets the color of the label text.
            </summary>
            <value>The color of the label text.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.CreateSimpleImageLabelButton(System.String,Xamarin.Forms.Color,System.Double,System.Double,System.Double,System.Object,Xamarin.Forms.Color,Xamarin.Forms.Color,Xamarin.Forms.LayoutOptions,Xamarin.Forms.LayoutOptions,System.String,System.Nullable{System.Double},Xamarin.Forms.FontAttributes,System.Single,System.String)">
            <summary>
               Creates the simple image label button.
            </summary>
            <param name="labelText">The label text.</param>
            <param name="labelTextColor">Color of the label text.</param>
            <param name="labelFontSize">Size of the label font.</param>
            <param name="widthRequest">The width request.</param>
            <param name="heightRequest">The height request.</param>
            <param name="bindingContext">The binding context.</param>
            <param name="buttonBackColor">Color of the button back.</param>
            <param name="buttonBorderColor">Color of the button border.</param>
            <param name="horizontalOptions">The horizontal options.</param>
            <param name="verticalOptions">The vertical options.</param>
            <param name="imageFilePath">The image file path.</param>
            <param name="buttonBorderWidth">Width of the button border.</param>
            <param name="labelFontAttributes">The label font attributes.</param>
            <param name="cornerRadiusFactor">The corner radius factor.</param>
            <param name="buttonCommandBindingName">Name of the button command binding.</param>
            <returns>ISimpleImageLabelButton.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.CreateSimpleImageLabelButtonBindableProperty``1(System.String,``0,Xamarin.Forms.BindingMode,System.Action{Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton,``0,``0})">
            <summary>
               Creates the simple image label button bindable property.
            </summary>
            <typeparam name="PropertyTypeT">The type of the property type t.</typeparam>
            <param name="localPropName">Name of the local property.</param>
            <param name="defaultVal">The default value.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="callbackAction">The callback action.</param>
            <returns>BindableProperty.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.Deselect">
            <summary>
               Deselects this instance.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.RecreateLabel">
            <summary>
               Recreates the label.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ResetButtonStyle">
            <summary>
               Resets the button style.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.SimpleImageLabelButton.ResetLabelStyle">
            <summary>
               Resets the label style.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.IThreadSafeAccessor">
            <summary>
               Interface IThreadSafeAccessor
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.IThreadSafeAccessor.ReadStoredValue">
            <summary>
               Reads the stored value.
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.IThreadSafeAccessor.WriteStoredValue(System.Object)">
            <summary>
               Writes the stored value.
            </summary>
            <param name="valueToStore">The value to store.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ThreadSafeAccessor">
            <summary>
               Class ThreadSafeAccessor.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.IThreadSafeAccessor" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.IThreadSafeAccessor" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.IThreadSafeAccessor" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.IThreadSafeAccessor" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.ThreadSafeAccessor._storedValue">
            <summary>
               The stored value
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ThreadSafeAccessor.#ctor(System.Object)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ThreadSafeAccessor" /> class.
            </summary>
            <param name="storedValue">The stored value.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ThreadSafeAccessor.ReadStoredValue">
            <summary>
               Reads the stored value.
            </summary>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.ThreadSafeAccessor.WriteStoredValue(System.Object)">
            <summary>
               Writes the stored value.
            </summary>
            <param name="valueToStore">The value to store.</param>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton">
            <summary>
               Interface ITriStateImageLabelButton
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.IImageLabelButton" />
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.ButtonDeselectedStyle">
            <summary>
               Gets or sets the button deselected style.
            </summary>
            <value>The button deselected style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.ButtonDisabledStyle">
            <summary>
               Gets or sets the button disabled style.
            </summary>
            <value>The button disabled style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.ButtonSelectedStyle">
            <summary>
               Gets or sets the button selected style.
            </summary>
            <value>The button selected style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.ButtonToggleSelection">
            <summary>
               Gets or sets a value indicating whether [button toggle selection].
            </summary>
            <value><c>true</c> if [button toggle selection]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.CanDisable">
            <summary>
               Gets or sets a value indicating whether this instance can disable.
            </summary>
            <value><c>true</c> if this instance can disable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.CanSelect">
            <summary>
               Gets or sets a value indicating whether this instance can select.
            </summary>
            <value><c>true</c> if this instance can select; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.GetImageFromResource">
            <summary>
               Gets or sets a value indicating whether [get image from resource].
            </summary>
            <value><c>true</c> if [get image from resource]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.ImageDeselectedFilePath">
            <summary>
               Gets or sets the image deselected file path.
            </summary>
            <value>The image deselected file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.ImageDisabledFilePath">
            <summary>
               Gets or sets the image disabled file path.
            </summary>
            <value>The image disabled file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.ImageResourceClassType">
            <summary>
               Gets or sets the type of the image resource class.
            </summary>
            <value>The type of the image resource class.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.ImageSelectedFilePath">
            <summary>
               Gets or sets the image selected file path.
            </summary>
            <value>The image selected file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.LabelDeselectedStyle">
            <summary>
               Gets or sets the label deselected style.
            </summary>
            <value>The label deselected style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.LabelDisabledStyle">
            <summary>
               Gets or sets the label disabled style.
            </summary>
            <value>The label disabled style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton.LabelSelectedStyle">
            <summary>
               Gets or sets the label selected style.
            </summary>
            <value>The label selected style.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton">
            <summary>
               A button that can contain either an image and/or a label.
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonBase" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Controls.ITriStateImageLabelButton" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.DESELECTED_BUTTON_STATE">
            <summary>
               The deselected button state
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.DISABLED_BUTTON_STATE">
            <summary>
               The disabled button state
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.SELECTED_BUTTON_STATE">
            <summary>
               The selected button state
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ButtonDeselectedStyleProperty">
            <summary>
               The button deselected style property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.CanSelectProperty">
            <summary>
               The can select property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.DisabledButtonStyleProperty">
            <summary>
               The disabled button style property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.GetImageFromResourceProperty">
            <summary>
               The get image from resource property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageDeselectedFilePathProperty">
            <summary>
               The image deselected file path property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageDisabledFilePathProperty">
            <summary>
               The image disabled file path property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageResourceClassTypeProperty">
            <summary>
               The image resource class type property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageSelectedFilePathProperty">
            <summary>
               The image selected file path property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.LabelDeselectedStyleProperty">
            <summary>
               The label deselected style property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.LabelDisabledStyleProperty">
            <summary>
               The label disabled style property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.LabelSelectedStyleProperty">
            <summary>
               The label selected style property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.SelectedButtonStyleProperty">
            <summary>
               The selected button style property
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ToggleSelectionProperty">
            <summary>
               Converts to ggleselectionproperty.
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._buttonDeselectedStyle">
            <summary>
               The button deselected style
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._buttonDisabledStyle">
            <summary>
               The button disabled style
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._buttonSelectedStyle">
            <summary>
               The button selected style
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._buttonToggleSelection">
            <summary>
               The button toggle selection
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._canDisable">
            <summary>
               The can disable
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._canSelect">
            <summary>
               The can select
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._imageDeselectedFilePath">
            <summary>
               The image deselected file path
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._imageDisabledFilePath">
            <summary>
               The image disabled file path
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._imageLabelButtonStyles">
            <summary>
               The image label button styles
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._imageSelectedFilePath">
            <summary>
               The image selected file path
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._labelDeselectedStyle">
            <summary>
               The label deselected style
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._labelDisabledStyle">
            <summary>
               The label disabled style
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton._labelSelectedButtonStyle">
            <summary>
               The label selected button style
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.#ctor">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton" /> class.
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.IsDisabled">
            <summary>
               Gets a value indicating whether this instance is disabled.
            </summary>
            <value><c>true</c> if this instance is disabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ButtonDeselectedStyle">
            <summary>
               Gets or sets the button deselected style.
            </summary>
            <value>The button deselected style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ButtonDisabledStyle">
            <summary>
               Gets or sets the button disabled style.
            </summary>
            <value>The button disabled style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ButtonSelectedStyle">
            <summary>
               Gets or sets the button selected style.
            </summary>
            <value>The button selected style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ButtonToggleSelection">
            <summary>
               Gets or sets a value indicating whether [button toggle selection].
            </summary>
            <value><c>true</c> if [button toggle selection]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.CanDisable">
            <summary>
               Gets or sets a value indicating whether this instance can disable.
            </summary>
            <value><c>true</c> if this instance can disable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.CanSelect">
            <summary>
               Gets or sets a value indicating whether this instance can select.
            </summary>
            <value><c>true</c> if this instance can select; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.GetImageFromResource">
            <summary>
               Gets or sets a value indicating whether [get image from resource].
            </summary>
            <value><c>true</c> if [get image from resource]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageDeselectedFilePath">
            <summary>
               Gets or sets the image deselected file path.
            </summary>
            <value>The image deselected file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageDisabledFilePath">
            <summary>
               Gets or sets the image disabled file path.
            </summary>
            <value>The image disabled file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageLabelButtonStyles">
            <summary>
               Gets the image label button styles.
            </summary>
            <value>The image label button styles.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageResourceClassType">
            <summary>
               Gets or sets the type of the image resource class.
            </summary>
            <value>The type of the image resource class.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ImageSelectedFilePath">
            <summary>
               Gets or sets the image selected file path.
            </summary>
            <value>The image selected file path.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.IsSelected">
            <summary>
               Gets a value indicating whether this instance is selected.
            </summary>
            <value><c>true</c> if this instance is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.LabelDeselectedStyle">
            <summary>
               Gets or sets the label deselected style.
            </summary>
            <value>The label deselected style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.LabelDisabledStyle">
            <summary>
               Gets or sets the label disabled style.
            </summary>
            <value>The label disabled style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.LabelSelectedStyle">
            <summary>
               Gets or sets the label selected style.
            </summary>
            <value>The label selected style.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.UpdateButtonTextFromStyle">
            <summary>
               Leave the button intact; it is not intended to change with selections.
            </summary>
            <value><c>true</c> if [update button text from style]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.CreateImageLabelButtonBindableProperty``1(System.String,``0,Xamarin.Forms.BindingMode,System.Action{Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton,``0,``0})">
            <summary>
               Creates the image label button bindable property.
            </summary>
            <typeparam name="PropertyTypeT">The type of the property type t.</typeparam>
            <param name="localPropName">Name of the local property.</param>
            <param name="defaultVal">The default value.</param>
            <param name="bindingMode">The binding mode.</param>
            <param name="callbackAction">The callback action.</param>
            <returns>BindableProperty.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.Deselect">
            <summary>
               Deselects this instance.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.OnButtonCommandCreated">
            <summary>
               Called when [button command created].
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.AssignStylesIfNotNull(Com.MarcusTS.SharedForms.Views.Controls.ImageLabelButtonStyle,Xamarin.Forms.Style,System.String,Xamarin.Forms.Style,System.Boolean)">
            <summary>
               Assigns the styles if not null.
            </summary>
            <param name="imageLabelButtonStyle">The image label button style.</param>
            <param name="buttonStyle">The button style.</param>
            <param name="imageFilePath">The image file path.</param>
            <param name="labelStyle">The label style.</param>
            <param name="fireCommand">if set to <c>true</c> [fire command].</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.CreateOrRefreshImageLabelButtonStyles(System.Boolean)">
            <summary>
               Creates the or refresh image label button styles.
            </summary>
            <param name="forceCreate">if set to <c>true</c> [force create].</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.ResetSelectionStyle">
            <summary>
               Resets the selection style.
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Controls.TriStateImageLabelButton.SetAllBaseStyles">
            <summary>
               Sets all base styles.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Pages.ITypeSafeViewBase">
            <summary>
               Interface ITypeSafeViewBase
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.Pages.TypeSafeViewBase`1">
            <summary>
               A base class for content views that protects the type safety of the binding context.
               Implements the <see cref="T:Xamarin.Forms.ContentView" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.Pages.ITypeSafeViewBase" />
            </summary>
            <typeparam name="InterfaceT">The required interface for this view.</typeparam>
            <seealso cref="T:Xamarin.Forms.ContentView" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.Pages.ITypeSafeViewBase" />
            <remarks>
               This code is similar to that at <see cref="!:TypeSafePageBase&lt;InterfaceT&gt;" /> except it manages a
               view rather than a page.
            </remarks>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Pages.TypeSafeViewBase`1._contentRelativeLayout">
            <summary>
               The content relative layout
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.Pages.TypeSafeViewBase`1._pageEventProvider">
            <summary>
               The page event provider
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Pages.TypeSafeViewBase`1.#ctor(Com.MarcusTS.SharedForms.Common.Interfaces.IProvidePageEvents)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.Pages.TypeSafeViewBase`1" /> class.
            </summary>
            <param name="pageEventProvider">The page event provider.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.Pages.TypeSafeViewBase`1.BindingContext">
            <summary>
               T is normally an interface -- not a class -- but there is no such constraint available.
            </summary>
            <value>
               An <see cref="T:System.Object" /> that contains the properties that will be targeted by the bound properties
               that belong to this <see cref="T:Xamarin.Forms.BindableObject" />. This is a bindable property.
            </value>
            <remarks>
               <block subset="none" type="note">
                  Typically, the runtime performance is better if
                  <see cref="P:Xamarin.Forms.BindableObject.BindingContext" /> is set after all calls to
                  <see cref="M:Xamarin.Forms.BindableObject.SetBinding(Xamarin.Forms.BindableProperty,Xamarin.Forms.BindingBase)" />
                  have been made.
               </block>
               <para>
                  The following example shows how to apply a BindingContext and a Binding to a Label (inherits from
                  BindableObject):
               </para>
               <example>
                  <code lang="csharp lang-csharp"><![CDATA[
            var label = new Label ();
            label.SetBinding (Label.TextProperty, "Name");
            label.BindingContext = new {Name = "John Doe", Company = "Xamarin"};
            Debug.WriteLine (label.Text); //prints "John Doe"
            ]]></code>
               </example>
            </remarks>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Pages.TypeSafeViewBase`1.AfterContentSet(Xamarin.Forms.RelativeLayout)">
            <summary>
               Afters the content set.
            </summary>
            <param name="layout">The layout.</param>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.Pages.TypeSafeViewBase`1.ConstructView">
            <summary>
               Requests that the deriver create the physical view.
            </summary>
            <returns>View.</returns>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.SubViews.IMainMenu">
            <summary>
               Interface IMainMenu
            </summary>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.SubViews.IMainMenu.IsMenuLoaded">
            <summary>
               Gets a value indicating whether this instance is menu loaded.
            </summary>
            <value><c>true</c> if this instance is menu loaded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.SubViews.IMainMenu.MenuHeight">
            <summary>
               Gets the height of the menu.
            </summary>
            <value>The height of the menu.</value>
        </member>
        <member name="T:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu">
            <summary>
               Class MainMenu.
               Implements the <see cref="T:Xamarin.Forms.ContentView" />
               Implements the <see cref="T:Com.MarcusTS.SharedForms.Views.SubViews.IMainMenu" />
            </summary>
            <seealso cref="T:Xamarin.Forms.ContentView" />
            <seealso cref="T:Com.MarcusTS.SharedForms.Views.SubViews.IMainMenu" />
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.ALLOW_EVENT_TUNNELING">
            <summary>
               The allow event tunneling
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.MENU_GROSS_WIDTH">
            <summary>
               The menu gross width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.MENU_INSIDE_SINGLE_MARGIN">
            <summary>
               The menu inside single margin
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.MENU_ITEM_WIDTH">
            <summary>
               The menu item width
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.MENU_OUTSIDE_MARGIN">
            <summary>
               The menu outside margin
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.MENU_OUTSIDE_SINGLE_MARGIN">
            <summary>
               The menu outside single margin
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.MAIN_MENU_OPACITY">
            <summary>
               The main menu opacity
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.MENU_ITEM_HEIGHT">
            <summary>
               The menu item height
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu._stateMachine">
            <summary>
               The state machine
            </summary>
        </member>
        <member name="F:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu._isMenuLoaded">
            <summary>
               The is menu loaded
            </summary>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.#ctor(Com.MarcusTS.SharedForms.Common.Navigation.IStateMachine)">
            <summary>
               Initializes a new instance of the <see cref="T:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu" /> class.
            </summary>
            <param name="stateMachine">The state machine.</param>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.IsMenuLoaded">
            <summary>
               Gets a value indicating whether this instance is menu loaded.
            </summary>
            <value><c>true</c> if this instance is menu loaded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.MenuHeight">
            <summary>
               Gets the height of the menu.
            </summary>
            <value>The height of the menu.</value>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.CreateMenuItemButton(Com.MarcusTS.SharedForms.Common.Interfaces.IMenuNavigationState)">
            <summary>
               Creates the menu item button.
            </summary>
            <param name="menuData">The menu data.</param>
            <returns>Button.</returns>
        </member>
        <member name="M:Com.MarcusTS.SharedForms.Views.SubViews.MainMenu.LoadMenuFromStateMachine">
            <summary>
               Loads the menu from state machine.
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedUtils.Navigation.INoPayload">
            <summary>
               Interface INoPayload
            </summary>
        </member>
        <member name="T:Com.MarcusTS.SharedUtils.Navigation.NoPayload">
            <summary>
               Class NoPayload.
               Implements the <see cref="T:Com.MarcusTS.SharedUtils.Navigation.INoPayload" />
               Implements the <see cref="T:Com.MarcusTS.SharedUtils.Navigation.INoPayload" />
            </summary>
            <seealso cref="T:Com.MarcusTS.SharedUtils.Navigation.INoPayload" />
            <seealso cref="T:Com.MarcusTS.SharedUtils.Navigation.INoPayload" />
        </member>
    </members>
</doc>
